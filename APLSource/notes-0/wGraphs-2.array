'───────────────⍞000DWeighted Graphs⍞000D───────────────⍞000DA  weighted  graph has a traversal cost associated with each edge. An example of⍞000Dan application might be in modelling a transportation system such as a road net-⍞000Dwork.  An  edge  of  the graph would correspond to a stretch of road between two⍞000Dintersections,  and  its  weight with the length of the section or expected time⍞000Dtaken to drive along it. Choosing an optimal path through such a network amounts⍞000Dto finding a set of graph edges connecting the start and end points, which has a⍞000Dminimal total cost.⍞000D⍞000DThe  following  diagram  represents a simple example, whose weights are shown to⍞000Dthe right of, or below, the direction arrow for each edge.⍞000D⍞000D  Weighted Graph "aa".⍞000D    ┌─────A←────┐⍞000D    │     │1    │   5 vertices: A B C D E⍞000D    ↓1    ↓3    │⍞000D    B←───→C────→D   8 edges:    A→B  A→C  B→C  C→B  C→D  D→A  D→E  E→C⍞000D     4   1↑1   1│   weights:     1    3    1    4    1    1    1    1⍞000D          │     ↓1⍞000D          └─────E   Notice that there is an edge C→B, as well as B→C.⍞000D⍞000DThe  graph  is  implemented as a 2-row  matrix, whose first row is an unweighted⍞000Dgraph and whose second row is a vector of weights for each edge.⍞000D⍞000DFunctions →wpath← and →wspan← do the same job as →path← and →span← respectively,⍞000Dand →wcost← returns the cost for each edge of a path through the graph.⍞000D⍞000DMike Day suggests a class of problem in which we navigate between adjacent cells⍞000Dof  a  matrix  and where there is a cost of visiting each cell. There may be re-⍞000Dstrictions  on  which  directions  we can take (for example: only rightwards and⍞000Ddownwards).⍞000D⍞000DMike  provides  a  function  to  convert from such a matrix to a weighted graph,⍞000Dsuitable for wpath, wspan, etc:⍞000D⍞000D    mattographa←{⎕ML←0⍞000D        i←{⍵⍴⍳×/⍵}⍴⍵⍞000D        max←1+⌈/,i⍞000D        ⍺←1 1 1 1           ⍝ if up left right down⍞000D        addlink←{⍞000D            1 1↓¯1 ¯1↓⍺{⍞000D                ⍺=0:⍵⍞000D                ⍺=1:¯1⊖⍵⍞000D                ⍺=2:¯1⌽⍵⍞000D                ⍺=3:1⌽⍵⍞000D                ⍺=4:1⊖⍵⍞000D            }⍵⍞000D        }⍞000D        op←⍺/⍳4⍞000D        w←max,max,⍨max⍪max⍪⍨i⍞000D        links←,{⍵/⍨⍵<max}¨↓[⎕IO]↑op addlink¨⊂w⍞000D        costs←links{⍺⊃¨⊂⍵}¨⊂,⍵⍞000D        links←(⊂⊂¨,i)⍳¨⊂¨¨links⍞000D        ↑links costs⍞000D    }⍞000D⍞000D    cell_costs          ⍝ cost of visiting each cell.⍞000D131 673 234 103  18⍞000D201  96 342 965 150⍞000D630 803 746 422 111⍞000D537 699 497 121 956⍞000D805 732 524  37 331⍞000D⍞000D    1 25 wpath⍨ 0 0 1 1 mattographa cell_costs      ⍝ minimal path: down, right.⍞000D1 6 7 8 13 14 19 24 25⍞000D⍞000D    1 25 wpath⍨ 1 1 1 1 mattographa cell_costs      ⍝ minimal path: any dirn.⍞000D1 6 7 8 3 4 5 10 15 14 19 24 25⍞000D⍞000D    costs←{⍵ wcost ⍵ wpath ⍺}                       ⍝ cost function.⍞000D⍞000D    1 25 costs 0 0 1 1 mattographa cell_costs       ⍝ cost of each link in path.⍞000D201 96 342 746 422 121 37 331⍞000D⍞000DNote that the cost of _entering_ the first cell is missing from the cost vector.⍞000D⍞000DThis nested version of mattographa is smaller but runs a lot slower than Mike''s:⍞000D⍞000D    m2g←{⎕ML←0                          ⍝ Graph from weightings matrix.⍞000D        ⍺←1 1 1 1                       ⍝ up left right down.⍞000D        dirns←⍺/(¯1 0)(0 ¯1)(0 1)(1 0)  ⍝ directions.⍞000D        xvecs←dirns∘+∘⊂¨⍳⍴⍵             ⍝ index vectors per link.⍞000D        links←,{⍵⍳¨⍵∩¨xvecs}⊂,⍳⍴⍵       ⍝ unweighted graph.⍞000D        costs←,links{⍺⊃¨⊂⍵}¨⊂,⍵         ⍝ costs per link.⍞000D        ↑links costs                    ⍝ weighted graph.⍞000D    }⍞000D⍞000DExamples:⍞000D⍞000D      aa←↑((2 3)3(2 4)(1 5)3) ((1 3)1(4 1)(1 1)1)⍞000D⍞000D      aa                            ⍝ simple weighted graph "aa".⍞000D┌───┬─┬───┬───┬─┐⍞000D│2 3│3│2 4│1 5│3│⍞000D├───┼─┼───┼───┼─┤⍞000D│1 3│1│4 1│1 1│1│⍞000D└───┴─┴───┴───┴─┘⍞000D⍞000D      show←{↑{⍺,''→'',⍵}/⎕a[⍵]}       ⍝ translate path vertices to: A B C ···⍞000D⍞000D      show aa wpath 3 2             ⍝ lowest cost path C→B.⍞000DC→D→A→B⍞000D⍞000D      show aa[1;] path 3 2          ⍝ compare: best path C→B _ignoring_ weights.⍞000DC→B⍞000D⍞000D      aa wspan 5                    ⍝ spanning tree for aa from vertex 3.⍞000D4 1 5 3 ¯1⍞000D⍞000D      disp(aa wspan 5)∘stpath¨⍳5    ⍝ paths to each vertex from spanning tree 5.⍞000D┌→──────┬─────────┬───┬─────┬─┐⍞000D│5 3 4 1│5 3 4 1 2│5 3│5 3 4│5│⍞000D└~─────→┴~───────→┴~─→┴~───→┴→┘⍞000D⍞000D      aa wcost 1 3 4 5 3 2 3 2      ⍝ cost of path through graph "aa".⍞000D3 1 1 1 4 1 4⍞000D⍞000DSee also: Graphs wpath wspan wcost wmst stpath⍞000DSee also: path span⍞000D⍞000DIndex:graph, weighted⍞000DIndex;Day M.' 
