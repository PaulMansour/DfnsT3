'rslt ← {x} (u ##.Cut case) y                ⍝ Cut operator.⍞000D⍞000DFrom Roger Hui:⍞000D⍞000DMonadic Cases:⍞000Du Cut 0 ⊢y applies u to y after reversing y along each axis; it is equivalent to⍞000D(⍉⎕io,⍪-⍴y) u Cut 0 ⊢y .⍞000D⍞000DThe "fret" 1⌷y (the leading major cell of y) marks the start of an  interval  of⍞000Dmajor cells of y ; the phrase  u Cut 1 ⊢y  applies u to each such interval.  The⍞000Dphrase  u Cut ¯1 ⊢y  differs only in that frets are excluded from the result. In⍞000Du Cut 2  and  u Cut ¯2  the fret is the  last major cell,  and marks the ends of⍞000Dintervals.⍞000D⍞000DThe monads  u Cut 3 and  u Cut ¯3 apply u to tessellation by maximal cubes, that⍞000Dis, they are defined by their dyadic cases using the left argument (⍴⍴y)⍴⌊/⍴y.⍞000D⍞000DDyadic Cases:⍞000Dx u Cut 0 ⊢y  applies u to a rectangle or cuboid of y with  one  vertex  at  the⍞000Dpoint in y indexed by  v←1⌷x and with the opposite vertex determined as follows:⍞000Dthe dimension is  |2⌷x ,  but the rectangle extends back from v along any axis j⍞000Dfor which the index j⌷v is negative. Finally, the order of the selected cells is⍞000Dreversed along each axis k for which k⌷2⌷x is negative. If x is a vector or⍞000Dscalar, it is treated as the matrix ⍉⎕io,⍪x .⍞000D⍞000DThe frets in the dyadic cases 1, ¯1, 2, and ¯2 are determined by the 1s in bool-⍞000Dean vector x ; an empty vector x and non-zero  ≢y indicates the entire of y.  If⍞000Dx is the scalar 0 or 1 it is treated as (≢y)⍴x .  In general, boolean vector j⊃x⍞000Dspecifies how axis j is to be cut, with a scalar treated as (j⌷⍴y)⍴j⊃x.⍞000D⍞000Du Cut 3  and  u Cut ¯3  yield (possibly overlapping) tessellations.  x Cut ¯3 ⊢y⍞000Dapplies u to each complete rectangle of size |2⌷x beginning at integer multiples⍞000Dof (each scalar of) the movement vector  1⌷x .  As in u Cut 0 ,  reversal occurs⍞000Dalong each axis for which the size  2⌷x  is negative.  The case of a  vector  or⍞000Dscalar x is equivalent to ⍉1,⍪x , and therefore provides a complete tessellation⍞000Dof size x . The case u Cut 3 differs in that shards of length less than |2⌷x are⍞000Dincluded.⍞000D⍞000DRefs:⍞000D⍞000DIverson, K.E., Rationalized APL, 1983, Section K.:⍞000D    http://www.jsoftware.com/papers/RationalizedAPL.htm⍞000DHui, R.K.W., Some Uses of { and }, 1987, Section 3.2.:⍞000D    http://www.jsoftware.com/papers/from.htm⍞000DIverson, K.E., A Dictionary of APL, 1987, m⍤v.:⍞000D    http://www.jsoftware.com/papers/APLDictionary.htm⍞000DHui, R.K.W., and K.E. Iverson, J Introduction and Dictionary, 2011, Cut (;.):⍞000D    http://www.jsoftware.com/help/dictionary/d331.htm⍞000D⍞000DExamples:⍞000D⍞000D⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝ 0-Cut⍞000D⍞000D⍝ The 0-cut selects rectangular subarrays, reversing each axis for which the⍞000D⍝ specified length is negative.⍞000D⍞000D    ⎕←x←4 10⍴⍳40⍞000D 1  2  3  4  5  6  7  8  9 10⍞000D11 12 13 14 15 16 17 18 19 20⍞000D21 22 23 24 25 26 27 28 29 30⍞000D31 32 33 34 35 36 37 38 39 40⍞000D⍞000D⍝ cut at indices 2 3 with sizes 3 4:⍞000D⍞000D    (⍉2 3,⍪3 4) ⊂Cut 0 ⊢x⍞000D┌───────────┐⍞000D│13 14 15 16│⍞000D│23 24 25 26│⍞000D│33 34 35 36│⍞000D└───────────┘⍞000D⍞000D⍝ cut at indices 2 3 with sizes 3 ¯4 (the ¯4 indicates reversal of axis 2):⍞000D⍞000D    (⍉2 3,⍪3 ¯4) ⊂Cut 0 ⊢x⍞000D┌───────────┐⍞000D│16 15 14 13│⍞000D│26 25 24 23│⍞000D│36 35 34 33│⍞000D└───────────┘⍞000D⍞000D⍝ cut at indices 1 1 (default) with sizes 3 ¯4 (the ¯4 indicates reversal of⍞000D⍝ axis 2):⍞000D⍞000D    3 ¯4 ⊂Cut 0 ⊢x⍞000D┌───────────┐⍞000D│ 4  3  2  1│⍞000D│14 13 12 11│⍞000D│24 23 22 21│⍞000D└───────────┘⍞000D⍞000D⍝ reverse each axis:⍞000D⍞000D    ⊢Cut 0 ⊢x⍞000D40 39 38 37 36 35 34 33 32 31⍞000D30 29 28 27 26 25 24 23 22 21⍞000D20 19 18 17 16 15 14 13 12 11⍞000D10  9  8  7  6  5  4  3  2  1⍞000D⍞000D⍝ cut at indices 2 ¯2 with sizes 3 6 (the ¯2 indicates negative indexing):⍞000D⍞000D    (⍉2 ¯2,⍪3 6) ⊢Cut 0 ⊢x⍞000D14 15 16 17 18 19⍞000D24 25 26 27 28 29⍞000D34 35 36 37 38 39⍞000D⍞000D⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝ 1 ¯1-Cut and 2 ¯2-Cut⍞000D⍞000D⍝ The 1- and 2-cut partition according a "fret", 1s in a boolean left argument⍞000D⍝ in the dyadic case or the leading major cell of the right argument in the⍞000D⍝ monadic case. Frets specify the starts of partitions in the 1-cut and the ends⍞000D⍝ in the 2-cut. The ¯1- and ¯2-cuts differ in excluding the frets.⍞000D⍞000D⍝ cut on leading blanks; apply ⊂ to each cut:⍞000D⍞000D    ⊂Cut 1 ⊢'' Cogito, ergo sum.''⍞000D┌────────┬─────┬─────┐⍞000D│ Cogito,│ ergo│ sum.│⍞000D└────────┴─────┴─────┘⍞000D⍞000D⍝ cut on leading blanks; apply {⊂⌽⍵} to each cut:⍞000D⍞000D    {⊂⌽⍵}Cut 1 ⊢'' Cogito, ergo sum.''⍞000D┌────────┬─────┬─────┐⍞000D│,otigoC │ogre │.mus │⍞000D└────────┴─────┴─────┘⍞000D⍞000D⍝ cut on leading blanks; apply ⊂ to each cut, excluding the leading cell:⍞000D⍞000D    ⊂Cut ¯1 ⊢'' Cogito, ergo sum.''⍞000D┌───────┬────┬────┐⍞000D│Cogito,│ergo│sum.│⍞000D└───────┴────┴────┘⍞000D⍞000D⍝ cut on leading 1s in the left argument; apply ⊂ to each cut:⍞000D⍞000D    1 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 ⊂Cut 1 ⊢'' Cogito, ergo sum.''⍞000D┌────────┬─────┬─────┐⍞000D│ Cogito,│ ergo│ sum.│⍞000D└────────┴─────┴─────┘⍞000D⍞000D⍝ cut on leading blanks; apply ⊂ to each cut:⍞000D⍞000D    ⊢Cut 1 ⊢'' Cogito, ergo sum.''⍞000D Cogito,⍞000D ergo⍞000D sum.⍞000D⍞000D⍝ cut on leading blanks; apply ⊢ to each cut, excluding the leading cell (the⍞000D⍝ common vtom (vector to matrix) utility):⍞000D⍞000D    ⊢Cut ¯1 ⊢'' Cogito, ergo sum.''⍞000DCogito,⍞000Dergo⍞000Dsum.⍞000D⍞000D⍝ cut on leading 1s in the left argument (←→ right argument because of the ⍨);⍞000D⍝ apply ≢ to each cut:⍞000D⍞000D    ≢Cut  1⍨ 1 0 1 0 0⍞000D2 3⍞000D⍞000D⍝ cut on leading 1s in the left argument; apply ≢ to each cut, excluding the⍞000D⍝ leading cell:⍞000D⍞000D    ≢Cut ¯1⍨ 1 0 1 0 0⍞000D1 2⍞000D⍞000D⍝ cut on trailing /; apply ⊂ to each cut:⍞000D⍞000D    ⊂Cut 2 ⊢''Cogito,/ergo/sum./''⍞000D┌────────┬─────┬─────┐⍞000D│Cogito,/│ergo/│sum./│⍞000D└────────┴─────┴─────┘⍞000D⍞000D⍝ cut on trailing 1s in the left argument (which specify the _ends_ of the cuts)⍞000D⍝ apply ⊂ to each cut:⍞000D⍞000D    1 0 1 0 0 1 0 0 ⊂Cut 2 ⊢''chthonic''⍞000D┌─┬──┬───┐⍞000D│c│ht│hon│⍞000D└─┴──┴───┘⍞000D⍞000D⍝ cut on trailing 1s in the left argument (which specify the _ends_ of the cuts)⍞000D⍝ apply +⌿ to each cut:⍞000D⍞000D    1 0 1 0 0 1 0 0 +⌿Cut 2 ⊢8 3⍴⍳24⍞000D 1  2  3⍞000D11 13 15⍞000D39 42 45⍞000D⍞000D⍝ cut on leading 1s in the left argument; apply ⊂ to each cut:⍞000D⍞000D    x←5 3⍴⍳15⍞000D    1 0 1 0 0 ⊂Cut 1 ⊢x⍞000D┌─────┬────────┐⍞000D│1 2 3│ 7  8  9│⍞000D│4 5 6│10 11 12│⍞000D│     │13 14 15│⍞000D└─────┴────────┘⍞000D⍞000D⍝ cut using 1 0 1 0 0 on axis 0 and 1 1 0 on axis 1 (not yet implemented by the⍞000D⍝ model):⍞000D⍞000D    (1 0 1 0 0) (1 1 0) ⊂Cut 1 ⊢x⍞000D┌──┬─────┐⍞000D│1 │2 3  │⍞000D│4 │5 6  │⍞000D├──┼─────┤⍞000D│ 7│ 8  9│⍞000D│10│11 12│⍞000D│13│14 15│⍞000D└──┴─────┘⍞000D⍞000D⍝ cut using ⍬ on axis 0 and 1 1 0 on axis 1 (not yet implemented by the model):⍞000D⍞000D    ⍬ (1 1 0) ⊂Cut 1 ⊢x⍞000D┌──┬─────┐⍞000D│ 1│ 2  3│⍞000D│ 4│ 5  6│⍞000D│ 7│ 8  9│⍞000D│10│11 12│⍞000D│13│14 15│⍞000D└──┴─────┘⍞000D⍞000D⍝ cut using ⍬ on axis 0 (not yet implemented by the model):⍞000D⍞000D    ⍬ ⊂Cut 1 ⊢x⍞000D┌────────┐⍞000D│ 1  2  3│⍞000D│ 4  5  6│⍞000D│ 7  8  9│⍞000D│10 11 12│⍞000D│13 14 15│⍞000D└────────┘⍞000D⍞000D⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝ 3 ¯3-Cut⍞000D⍞000D⍝ The 3-cut provides tessellation.⍞000D⍝ The ¯3-cut differs in excluding shards, cells less than the full size.⍞000D⍞000D    ⎕←x←5 7⍴⍳35⍞000D 1  2  3  4  5  6  7⍞000D 8  9 10 11 12 13 14⍞000D15 16 17 18 19 20 21⍞000D22 23 24 25 26 27 28⍞000D29 30 31 32 33 34 35⍞000D⍞000D⍝ tessellate using movements 2 1 and sizes 3 2:⍞000D⍞000D    (2 2⍴2 1 3 2) ⊂Cut 3 ⊢x⍞000D┌─────┬─────┬─────┬─────┬─────┬─────┬──┐⍞000D│ 1  2│ 2  3│ 3  4│ 4  5│ 5  6│ 6  7│ 7│⍞000D│ 8  9│ 9 10│10 11│11 12│12 13│13 14│14│⍞000D│15 16│16 17│17 18│18 19│19 20│20 21│21│⍞000D├─────┼─────┼─────┼─────┼─────┼─────┼──┤⍞000D│15 16│16 17│17 18│18 19│19 20│20 21│21│⍞000D│22 23│23 24│24 25│25 26│26 27│27 28│28│⍞000D│29 30│30 31│31 32│32 33│33 34│34 35│35│⍞000D├─────┼─────┼─────┼─────┼─────┼─────┼──┤⍞000D│29 30│30 31│31 32│32 33│33 34│34 35│35│⍞000D└─────┴─────┴─────┴─────┴─────┴─────┴──┘⍞000D⍞000D⍝ tessellate using movements 2 1 and sizes ¯3 2⍞000D⍝ (¯3 indicates reversal of axis 1 of each cut):⍞000D⍞000D    (2 2⍴2 1 ¯3 2) ⊂Cut 3 ⊢x⍞000D┌─────┬─────┬─────┬─────┬─────┬─────┬──┐⍞000D│15 16│16 17│17 18│18 19│19 20│20 21│21│⍞000D│ 8  9│ 9 10│10 11│11 12│12 13│13 14│14│⍞000D│ 1  2│ 2  3│ 3  4│ 4  5│ 5  6│ 6  7│ 7│⍞000D├─────┼─────┼─────┼─────┼─────┼─────┼──┤⍞000D│29 30│30 31│31 32│32 33│33 34│34 35│35│⍞000D│22 23│23 24│24 25│25 26│26 27│27 28│28│⍞000D│15 16│16 17│17 18│18 19│19 20│20 21│21│⍞000D├─────┼─────┼─────┼─────┼─────┼─────┼──┤⍞000D│29 30│30 31│31 32│32 33│33 34│34 35│35│⍞000D└─────┴─────┴─────┴─────┴─────┴─────┴──┘⍞000D⍞000D⍝ tessellate using movements 2 1 and sizes 3 ¯2⍞000D⍝ (¯2 indicates reversal of axis 2 of each cut):⍞000D⍞000D    (2 2⍴2 1 3 ¯2) ⊂Cut 3 ⊢x⍞000D┌─────┬─────┬─────┬─────┬─────┬─────┬──┐⍞000D│ 2  1│ 3  2│ 4  3│ 5  4│ 6  5│ 7  6│ 7│⍞000D│ 9  8│10  9│11 10│12 11│13 12│14 13│14│⍞000D│16 15│17 16│18 17│19 18│20 19│21 20│21│⍞000D├─────┼─────┼─────┼─────┼─────┼─────┼──┤⍞000D│16 15│17 16│18 17│19 18│20 19│21 20│21│⍞000D│23 22│24 23│25 24│26 25│27 26│28 27│28│⍞000D│30 29│31 30│32 31│33 32│34 33│35 34│35│⍞000D├─────┼─────┼─────┼─────┼─────┼─────┼──┤⍞000D│30 29│31 30│32 31│33 32│34 33│35 34│35│⍞000D└─────┴─────┴─────┴─────┴─────┴─────┴──┘⍞000D⍞000D⍝ tessellate using movements 1 1 (default) and sizes ¯3 2:⍞000D⍞000D    ¯3 2 ⊂Cut 3 ⊢x⍞000D┌─────┬─────┬─────┬─────┬─────┬─────┬──┐⍞000D│15 16│16 17│17 18│18 19│19 20│20 21│21│⍞000D│ 8  9│ 9 10│10 11│11 12│12 13│13 14│14│⍞000D│ 1  2│ 2  3│ 3  4│ 4  5│ 5  6│ 6  7│ 7│⍞000D├─────┼─────┼─────┼─────┼─────┼─────┼──┤⍞000D│22 23│23 24│24 25│25 26│26 27│27 28│28│⍞000D│15 16│16 17│17 18│18 19│19 20│20 21│21│⍞000D│ 8  9│ 9 10│10 11│11 12│12 13│13 14│14│⍞000D├─────┼─────┼─────┼─────┼─────┼─────┼──┤⍞000D│29 30│30 31│31 32│32 33│33 34│34 35│35│⍞000D│22 23│23 24│24 25│25 26│26 27│27 28│28│⍞000D│15 16│16 17│17 18│18 19│19 20│20 21│21│⍞000D├─────┼─────┼─────┼─────┼─────┼─────┼──┤⍞000D│29 30│30 31│31 32│32 33│33 34│34 35│35│⍞000D│22 23│23 24│24 25│25 26│26 27│27 28│28│⍞000D├─────┼─────┼─────┼─────┼─────┼─────┼──┤⍞000D│29 30│30 31│31 32│32 33│33 34│34 35│35│⍞000D└─────┴─────┴─────┴─────┴─────┴─────┴──┘⍞000D⍞000D⍝ tessellate using movements 1 1 (default) and sizes ¯3 2, excluding shards:⍞000D⍞000D    ¯3 2 ⊂Cut ¯3 ⊢x⍞000D┌─────┬─────┬─────┬─────┬─────┬─────┐⍞000D│15 16│16 17│17 18│18 19│19 20│20 21│⍞000D│ 8  9│ 9 10│10 11│11 12│12 13│13 14│⍞000D│ 1  2│ 2  3│ 3  4│ 4  5│ 5  6│ 6  7│⍞000D├─────┼─────┼─────┼─────┼─────┼─────┤⍞000D│22 23│23 24│24 25│25 26│26 27│27 28│⍞000D│15 16│16 17│17 18│18 19│19 20│20 21│⍞000D│ 8  9│ 9 10│10 11│11 12│12 13│13 14│⍞000D├─────┼─────┼─────┼─────┼─────┼─────┤⍞000D│29 30│30 31│31 32│32 33│33 34│34 35│⍞000D│22 23│23 24│24 25│25 26│26 27│27 28│⍞000D│15 16│16 17│17 18│18 19│19 20│20 21│⍞000D└─────┴─────┴─────┴─────┴─────┴─────┘⍞000D⍞000D⍝ movements 1 1 (default) and sizes 3 3, excluding shards; apply , to each cut:⍞000D⍞000D    life←{1⊖1⌽(-⍴⍵)↑5 6 7∊⍨(3 3 ,Cut ¯3⊢⍵)+.×9⍴1,⍨4⍴2}⍞000D⍞000D    b←10 10⍴0 ⋄ b[2;3]←b[3;4]←b[4;2 3 4]←1  ⍝ "glider"⍞000D⍞000D    {''.x''[1+life⍣⍵⊢b]}¨¯1+⍳10               ⍝ game of life for 10 generations⍞000D┌──────────┬──────────┬──────────┬──────────┬──────────┬──────────┬──────────┬──────────┬──────────┬──────────┐⍞000D│..........│..........│..........│..........│..........│..........│..........│..........│..........│..........│⍞000D│..x.......│..........│..........│..........│..........│..........│..........│..........│..........│..........│⍞000D│...x......│.x.x......│...x......│..x.......│...x......│..........│..........│..........│..........│..........│⍞000D│.xxx......│..xx......│.x.x......│...xx.....│....x.....│..x.x.....│....x.....│...x......│....x.....│..........│⍞000D│..........│..x.......│..xx......│..xx......│..xxx.....│...xx.....│..x.x.....│....xx....│.....x....│...x.x....│⍞000D│..........│..........│..........│..........│..........│...x......│...xx.....│...xx.....│...xxx....│....xx....│⍞000D│..........│..........│..........│..........│..........│..........│..........│..........│..........│....x.....│⍞000D│..........│..........│..........│..........│..........│..........│..........│..........│..........│..........│⍞000D│..........│..........│..........│..........│..........│..........│..........│..........│..........│..........│⍞000D│..........│..........│..........│..........│..........│..........│..........│..........│..........│..........│⍞000D└──────────┴──────────┴──────────┴──────────┴──────────┴──────────┴──────────┴──────────┴──────────┴──────────┘⍞000D⍞000DSee also: life⍞000D⍞000DIndex:Cut|life, game of⍞000DIndex;Hui R.K.W.' 
