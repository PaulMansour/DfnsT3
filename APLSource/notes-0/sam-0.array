'new ← {larg} (sel ##.sam mod) old           ⍝ Select and modify.⍞000D⍞000D[sel]ected  items  of the [old] array are [mod]ified. [larg] is an optional left⍞000Dargument  to  [sel],  which is a primitive function suitable for selective spec-⍞000Dification.  [mod] is a monadic function that is applied to the selected items of⍞000Dthe  array.  Application  of  the operator, bound with its function operands, is⍞000Dequivalent to the selective specification:⍞000D⍞000D    new←old⍞000D    (larg sel new)←mod larg sel old⍞000D    new⍞000D⍞000DTechnical note:⍞000D⍞000DSuggested  by  Paul  Mansour,  [sam] can be used to avoid, or at least hide, the⍞000D"destructive assignment"  that is anathema to the functional programming purist.⍞000DHaving said this, the selective specification, which is used to implement [sam],⍞000Dis a prime example of such destruction. There are "pure" ways to code this oper-⍞000Dator but none are as efficient.⍞000D⍞000DExamples:⍞000D⍞000D    vex                                 ⍝ depth-3 array.⍞000D┌───────────────┬──────────────────┬────────────────┐⍞000D│┌───┬───┬─────┐│┌─────┬────┬─────┐│┌───┬────┬─────┐│⍞000D││one│two│three│││alpha│beta│gamma│││red│blue│green││⍞000D│└───┴───┴─────┘│└─────┴────┴─────┘│└───┴────┴─────┘│⍞000D└───────────────┴──────────────────┴────────────────┘⍞000D⍞000D    2 ↑sam⌽ vex                         ⍝ first two items reversed.⍞000D┌──────────────────┬───────────────┬────────────────┐⍞000D│┌─────┬────┬─────┐│┌───┬───┬─────┐│┌───┬────┬─────┐│⍞000D││alpha│beta│gamma│││one│two│three│││red│blue│green││⍞000D│└─────┴────┴─────┘│└───┴───┴─────┘│└───┴────┴─────┘│⍞000D└──────────────────┴───────────────┴────────────────┘⍞000D⍞000D    2 ↑sam⌽¨ vex                        ⍝ each of first 2 items reversed.⍞000D┌───────────────┬──────────────────┬────────────────┐⍞000D│┌───┬───┬─────┐│┌────┬─────┬─────┐│┌────┬───┬─────┐│⍞000D││two│one│three│││beta│alpha│gamma│││blue│red│green││⍞000D│└───┴───┴─────┘│└────┴─────┴─────┘│└────┴───┴─────┘│⍞000D└───────────────┴──────────────────┴────────────────┘⍞000D⍞000D    2 ↑sam⌽¨¨ vex                       ⍝ each of each of   ..      ..⍞000D┌───────────────┬──────────────────┬────────────────┐⍞000D│┌───┬───┬─────┐│┌─────┬────┬─────┐│┌───┬────┬─────┐│⍞000D││noe│wto│htree│││lapha│ebta│agmma│││erd│lbue│rgeen││⍞000D│└───┴───┴─────┘│└─────┴────┴─────┘│└───┴────┴─────┘│⍞000D└───────────────┴──────────────────┴────────────────┘⍞000D⍞000D    ⊃sam⍪ vex                           ⍝ first item flipped.⍞000D┌───────┬──────────────────┬────────────────┐⍞000D│┌─────┐│┌─────┬────┬─────┐│┌───┬────┬─────┐│⍞000D││one  │││alpha│beta│gamma│││red│blue│green││⍞000D│├─────┤│└─────┴────┴─────┘│└───┴────┴─────┘│⍞000D││two  ││                  │                │⍞000D│├─────┤│                  │                │⍞000D││three││                  │                │⍞000D│└─────┘│                  │                │⍞000D└───────┴──────────────────┴────────────────┘⍞000D⍞000D    2 ⊃sam⍪ vex                         ⍝ middle item flipped.⍞000D┌───────────────┬───────┬────────────────┐⍞000D│┌───┬───┬─────┐│┌─────┐│┌───┬────┬─────┐│⍞000D││one│two│three│││alpha│││red│blue│green││⍞000D│└───┴───┴─────┘│├─────┤│└───┴────┴─────┘│⍞000D│               ││beta ││                │⍞000D│               │├─────┤│                │⍞000D│               ││gamma││                │⍞000D│               │└─────┘│                │⍞000D└───────────────┴───────┴────────────────┘⍞000D⍞000D    1 2 3 ⊃sam⍪¨ vex                    ⍝ one vector of each item  flipped.⍞000D┌─────────────┬───────────────┬────────────┐⍞000D│┌─┬───┬─────┐│┌─────┬─┬─────┐│┌───┬────┬─┐│⍞000D││o│two│three│││alpha│b│gamma│││red│blue│g││⍞000D││n│   │     │││     │e│     │││   │    │r││⍞000D││e│   │     │││     │t│     │││   │    │e││⍞000D│└─┴───┴─────┘││     │a│     │││   │    │e││⍞000D│             │└─────┴─┴─────┘││   │    │n││⍞000D│             │               │└───┴────┴─┘│⍞000D└─────────────┴───────────────┴────────────┘⍞000D⍞000D    1 2 3 ⊃sam{''<'',⍵,''>''}¨ vex          ⍝ one vector of each item bracketed.⍞000D┌─────────────────┬────────────────────┬──────────────────┐⍞000D│┌─────┬───┬─────┐│┌─────┬──────┬─────┐│┌───┬────┬───────┐│⍞000D││<one>│two│three│││alpha│<beta>│gamma│││red│blue│<green>││⍞000D│└─────┴───┴─────┘│└─────┴──────┴─────┘│└───┴────┴───────┘│⍞000D└─────────────────┴────────────────────┴──────────────────┘⍞000D⍞000D    1 0 1 /sam{⊂''---''} vex              ⍝ outside items replaced.⍞000D┌───┬──────────────────┬───┐⍞000D│---│┌─────┬────┬─────┐│---│⍞000D│   ││alpha│beta│gamma││   │⍞000D│   │└─────┴────┴─────┘│   │⍞000D└───┴──────────────────┴───┘⍞000D⍞000D    (⊂1 0 1) /sam{⊂''---''}¨ vex          ⍝ outside vectors of each item replaced.⍞000D┌─────────────┬──────────────┬──────────────┐⍞000D│┌───┬───┬───┐│┌───┬────┬───┐│┌───┬────┬───┐│⍞000D││---│two│---│││---│beta│---│││---│blue│---││⍞000D│└───┴───┴───┘│└───┴────┴───┘│└───┴────┴───┘│⍞000D└─────────────┴──────────────┴──────────────┘⍞000D⍞000D    1 0 1 /sam{⊂''---''}¨ vex             ⍝ each vector of outside items replaced.⍞000D┌─────────────┬──────────────────┬─────────────┐⍞000D│┌───┬───┬───┐│┌─────┬────┬─────┐│┌───┬───┬───┐│⍞000D││---│---│---│││alpha│beta│gamma│││---│---│---││⍞000D│└───┴───┴───┘│└─────┴────┴─────┘│└───┴───┴───┘│⍞000D└─────────────┴──────────────────┴─────────────┘⍞000D⍞000D    ↑vex                                ⍝ matrix of vectors.⍞000D┌─────┬────┬─────┐⍞000D│one  │two │three│⍞000D├─────┼────┼─────┤⍞000D│alpha│beta│gamma│⍞000D├─────┼────┼─────┤⍞000D│red  │blue│green│⍞000D└─────┴────┴─────┘⍞000D⍞000D    1 1 ⍉sam⌽ ↑vex                      ⍝ diagonal reversed.⍞000D┌─────┬────┬─────┐⍞000D│green│two │three│⍞000D├─────┼────┼─────┤⍞000D│alpha│beta│gamma│⍞000D├─────┼────┼─────┤⍞000D│red  │blue│one  │⍞000D└─────┴────┴─────┘⍞000D⍞000D    1 1 ⍉sam(⌽¨) ↑vex                   ⍝ each vector on diagonal reversed.⍞000D┌─────┬────┬─────┐⍞000D│eno  │two │three│⍞000D├─────┼────┼─────┤⍞000D│alpha│ateb│gamma│⍞000D├─────┼────┼─────┤⍞000D│red  │blue│neerg│⍞000D└─────┴────┴─────┘⍞000D⍞000D    1 1 ⍉sam{ucase¨⍵} ↑vex              ⍝ diagonal vectors upper-cased.⍞000D┌─────┬────┬─────┐⍞000D│ONE  │two │three│⍞000D├─────┼────┼─────┤⍞000D│alpha│BETA│gamma│⍞000D├─────┼────┼─────┤⍞000D│red  │blue│GREEN│⍞000D└─────┴────┴─────┘⍞000D⍞000D    ↑¨vex                               ⍝ vector of matrices.⍞000D┌─────┬─────┬─────┐⍞000D│one  │alpha│red  │⍞000D│two  │beta │blue │⍞000D│three│gamma│green│⍞000D└─────┴─────┴─────┘⍞000D⍞000D    (⊂1 1) ⍉sam{ucase ⍵}¨ ↑¨vex         ⍝ diagonals upper-cased.⍞000D┌─────┬─────┬─────┐⍞000D│One  │Alpha│Red  │⍞000D│tWo  │bEta │bLue │⍞000D│thRee│gaMma│grEen│⍞000D└─────┴─────┴─────┘⍞000D⍞000D    (⊂1 1) ⍉sam{''·''}¨ ↑¨vex             ⍝ diagonals zapped.⍞000D┌─────┬─────┬─────┐⍞000D│·ne  │·lpha│·ed  │⍞000D│t·o  │b·ta │b·ue │⍞000D│th·ee│ga·ma│gr·en│⍞000D└─────┴─────┴─────┘⍞000D⍞000DSee also: select each at⍞000D⍞000DIndex:select and modify|assignment, destructive|pure function⍞000DIndex;Mansour P.' 
