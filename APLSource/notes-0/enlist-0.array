'list ← {leaves} ##.enlist array             ⍝ List ⍺-leaves of nested array.⍞000D⍞000DSuggested  by Yves Bopp, this function generalises primitive enlist (∊⍵), to re-⍞000Dturn a list of the (at most) depth-⍺ leaves of its array argument.⍞000D⍞000DTechnical note:⍞000D⍞000DThe  function uses ↑,/ to concatenate array items. If the array were empty, this⍞000Dwould cause an error as the primitive catenate function has no associated ident-⍞000Dity  item.  This  situation is avoided by prefixing an item before the reduction⍞000Dand  removing it afterwards. In this null case, the correct prototypical item is⍞000Dmaintained by using the first item of the array itself as the dummy item.⍞000D⍞000DExamples:⍞000D⍞000D    vecs                        ⍝ uniform depth 4 array.⍞000D┌───────────────────────────────┬─────────────────────────┐⍞000D│┌─────────────┬───────────────┐│┌────────────┬──────────┐│⍞000D││┌─────┬─────┐│┌───────┬─────┐│││┌────┬─────┐│┌───┬────┐││⍞000D│││hello│world│││bonjour│monde│││││good│night│││bon│soir│││⍞000D││└─────┴─────┘│└───────┴─────┘│││└────┴─────┘│└───┴────┘││⍞000D│└─────────────┴───────────────┘│└────────────┴──────────┘│⍞000D└───────────────────────────────┴─────────────────────────┘⍞000D⍞000D    0 enlist vecs               ⍝ list (vector) of depth-0 leaves.⍞000Dhelloworldbonjourmondegoodnightbonsoir⍞000D⍞000D    1 enlist vecs               ⍝ list of depth-1 leaves.⍞000D┌─────┬─────┬───────┬─────┬────┬─────┬───┬────┐⍞000D│hello│world│bonjour│monde│good│night│bon│soir│⍞000D└─────┴─────┴───────┴─────┴────┴─────┴───┴────┘⍞000D⍞000D    2 enlist vecs               ⍝ list of depth-2 leaves.⍞000D┌─────────────┬───────────────┬────────────┬──────────┐⍞000D│┌─────┬─────┐│┌───────┬─────┐│┌────┬─────┐│┌───┬────┐│⍞000D││hello│world│││bonjour│monde│││good│night│││bon│soir││⍞000D│└─────┴─────┘│└───────┴─────┘│└────┴─────┘│└───┴────┘│⍞000D└─────────────┴───────────────┴────────────┴──────────┘⍞000D⍞000D    3 enlist vecs               ⍝ list of depth-3 leaves.⍞000D┌───────────────────────────────┬─────────────────────────┐⍞000D│┌─────────────┬───────────────┐│┌────────────┬──────────┐│⍞000D││┌─────┬─────┐│┌───────┬─────┐│││┌────┬─────┐│┌───┬────┐││⍞000D│││hello│world│││bonjour│monde│││││good│night│││bon│soir│││⍞000D││└─────┴─────┘│└───────┴─────┘│││└────┴─────┘│└───┴────┘││⍞000D│└─────────────┴───────────────┘│└────────────┴──────────┘│⍞000D└───────────────────────────────┴─────────────────────────┘⍞000D⍞000D    tea                         ⍝ non-uniform depth-3 array.⍞000D┌───────────┬──────────┐⍞000D│┌───┬─┬───┐│┌─┬───┬─┐ │⍞000D││tea│4│two│││2│for│T│ │⍞000D│└───┴─┴───┘│└─┴───┴─┘ │⍞000D├───────────┼──────────┤⍞000D│┌──┬─┬───┐ │┌─┬───┬──┐│⍞000D││me│&│you│ ││u│and│me││⍞000D│└──┴─┴───┘ │└─┴───┴──┘│⍞000D└───────────┴──────────┘⍞000D⍞000D    0 enlist tea                ⍝ list of depth-0 leaves.⍞000Dtea 4 two 2 forTme&youuandme⍞000D⍞000D    1 enlist tea                ⍝ list of (at most) depth-1 leaves.⍞000D┌───┬─┬───┬─┬───┬─┬──┬─┬───┬─┬───┬──┐⍞000D│tea│4│two│2│for│T│me│&│you│u│and│me│⍞000D└───┴─┴───┴─┴───┴─┴──┴─┴───┴─┴───┴──┘⍞000D⍞000D    2 enlist tea                ⍝ list of depth-2 leaves.⍞000D┌───────────┬─────────┬──────────┬──────────┐⍞000D│┌───┬─┬───┐│┌─┬───┬─┐│┌──┬─┬───┐│┌─┬───┬──┐│⍞000D││tea│4│two│││2│for│T│││me│&│you│││u│and│me││⍞000D│└───┴─┴───┘│└─┴───┴─┘│└──┴─┴───┘│└─┴───┴──┘│⍞000D└───────────┴─────────┴──────────┴──────────┘⍞000D⍞000D    {⎕ml←1 ⋄ (enlist ⍵)≡∊⍵}¨vecs tea    ⍝ 0∘enlist agrees with primitive fn.⍞000D1 1⍞000D⍞000DSee also: saw perv⍞000D⍞000DIndex:enlist|array, nested⍞000DIndex;Bopp Y.' 
