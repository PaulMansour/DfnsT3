'─────⍞000DTrees⍞000D─────⍞000DTree  structures can be represented in APL in many ways. Two popular methods are⍞000Dto  use  array  nesting,  or "TreeView"  style depth and leaf vectors. Functions⍞000D→tview←  and  →tnest←  swap between these two styles and →tfmt← takes the nested⍞000Drepresentation and renders it as an indented character matrix suitable for disp-⍞000Dlay in the session.⍞000D⍞000DWe  can represent a tree as a vector, where at each level, the first item is the⍞000Dtree  node  and  subsequent items are sub-trees. Leaves are identified by having⍞000Ddepth=1. For example, the following tree:⍞000D⍞000D                  drink⍞000D           ┌────────┴────────┐⍞000D          hot               cold⍞000D       ┌───┴───┐         ┌───┴───┐⍞000D      tea    coffee     milk    beer⍞000D⍞000D⍞000D... might be represented thus:⍞000D⍞000D    nested←''drink''(''hot'' ''tea'' ''coffee'')(''cold'' ''milk'' ''beer'')⍞000D⍞000D    disp nested                             ⍝ Nested format.⍞000D┌─────┬────────────────┬────────────────┐⍞000D│drink│┌───┬───┬──────┐│┌────┬────┬────┐│⍞000D│     ││hot│tea│coffee│││cold│milk│beer││⍞000D│     │└───┴───┴──────┘│└────┴────┴────┘│⍞000D└─────┴────────────────┴────────────────┘⍞000D⍞000D    disp tview nested                       ⍝ TreeView format.⍞000D┌─────────────┬─────────────────────────────────────┐⍞000D│0 1 2 2 1 2 2│┌─────┬───┬───┬──────┬────┬────┬────┐│⍞000D│             ││drink│hot│tea│coffee│cold│milk│beer││⍞000D│             │└─────┴───┴───┴──────┴────┴────┴────┘│⍞000D└─────────────┴─────────────────────────────────────┘⍞000D⍞000D      display tfmt nested               ⍝ Indented format.⍞000D┌→─────────────┐⍞000D↓drink         │⍞000D│·   hot       │⍞000D│·   ·   tea   │⍞000D│·   ·   coffee│⍞000D│·   cold      │⍞000D│·   ·   milk  │⍞000D│·   ·   beer  │⍞000D└──────────────┘⍞000D⍞000D      nested ≡ tnest tview nested       ⍝ Full circle⍞000D1⍞000D⍞000DSee also: tnest tview tfmt span dft BST trav⍞000D⍞000DIndex:tree' 
