'nvec ← ##.factors numb                      ⍝ Prime factors of ⍵⍞000D⍞000D[factors]  takes  an  integer  scalar argument and returns a vector of ascending⍞000Dprime numbers whose product is ⍵.⍞000D⍞000DThe stages in the process are:⍞000D⍞000D    1. Sequence: (2 .. ⍵*÷2),⍵  must contain all but at most one factor.⍞000D    2. Extract those that divide ⍵ exactly.⍞000D    3. Sieve out any multiples leaving only primes.⍞000D    4. For each prime factor, replicate those powers that divide ⍵.⍞000D    5. Append single factor greater than ⍵*÷2, if there is one.⍞000D⍞000DOne  weakness of this approach is that the vector generated in step 1 uses a lot⍞000Dof  workspace, and will cause a WS FULL if ⍵ is more than about (⎕wa*2)÷2*8. For⍞000Dexample,  to  extract  the  factors of a 10-digit phone number, we need around a⍞000Dmegabyte and a half of available workspace.⍞000D⍞000DVMJ suggests that the initial sequence: (2 3 4 5 6 7 .. ⍵*÷2) be replaced by the⍞000Dsparser: (2,3 5 7 .. ⍵*÷2). This reduces both execution time and memory usage by⍞000Da factor of around 2. In other words, the naïve coding:⍞000D⍞000D    }(1↓⍳⌊⍵*÷2),⍵           ⍝ 2 .. sqrt(⍵),⍵⍞000D⍞000Dis replaced with:⍞000D⍞000D    }2,(1+2×⍳⌊0.5×⍵*÷2)     ⍝ 2,3 5 .. sqrt(⍵),⍵⍞000D⍞000DThe code could have been written as a series of assignments to local variables:⍞000D⍞000D    seq0←2,(1+2×⍳⌊0.5×⍵*÷2)     ⍝ 2,3 5 .. sqrt(⍵),⍵⍞000D    seq1←(0=seq0|⍵)/seq0        ⍝ divisors of ⍵ in:⍞000D    ···⍞000DHowever, the large amount of workspace used for the first result would then have⍞000Dendured for  the  rest of the process. The approach taken here of using a "pipe-⍞000Dline" of functions:⍞000D⍞000D    }{⍞000D        ···⍞000D    }{⍞000D        ···⍞000D    }{⍞000D⍞000D... ensures that intermediate results are released as soon as possible.⍞000D⍞000DExamples:⍞000D⍞000D    factors +441256830030           ⍝ Dyalog phone number factors.⍞000D2 3 3 5 71 73 945949⍞000D⍞000D    factors +441256830031           ⍝ Dyalog fax number factors.⍞000D587 9007 83459⍞000D⍞000D    factors 4294967297              ⍝ 5th Fermat number, factored by Euler 1732.⍞000D641 6700417⍞000D⍞000D    {⍵≡factors×/⍵}sieve 2 to 30     ⍝ Factors of product of primes.⍞000D1⍞000D    2 3 5{⍺≡∪factors×/⍺*⍵}4 5 6     ⍝ Unique factors of product of prime powers.⍞000D1⍞000D    factors ⎕rl                     ⍝ Initial ⎕rl is 7*5.⍞000D7 7 7 7 7⍞000D⍞000DSee also: pco gcd sieve rational cfract nats rats⍞000D⍞000DIndex:prime number⍞000DIndex;Jantunen V-M.|Fermat P. de|Euler L.' 
