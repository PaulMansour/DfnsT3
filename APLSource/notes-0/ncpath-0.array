'cvec ← {path←⎕path} ##.ncpath names         ⍝ ⎕path-aware ⎕nc.⍞000D⍞000DSuggested  by Mark Johns, this function searches namespaces in its left argument⍞000D(default ⎕PATH) for functions and operators named in its right argument.⍞000D⍞000DRight  argument [names] is a simple character matrix, vector or scalar, suitable⍞000Das a right argument for ⎕NC.⍞000D⍞000DFor  each name found along the [path], [ncpath] reports:⍞000D⍞000D    3 for a function,⍞000D    4 for an operator and⍞000D    0 otherwise.⍞000D⍞000DNote that this function ignores names with a class other than 3 or 4.⍞000D⍞000DBugs:⍞000DThis  rather  simple coding of the function does not cope with the special ⎕path⍞000Dentry:  ''↑''.  We could arrange to have it substitute occurrences of ''↑'' in ⎕path⍞000Dwith  an  appropriate sequence ''## ##.## ##.##.## ···''. The following expression⍞000Dreturns such a sequence:⍞000D⍞000D    {⍺,''.'',⍵}\{''##''}¨(⎕cs'''')∩''.''⍞000D⍞000D(muse:⍞000D    Remember  that operators may take arrays, as well as functions, as operands.⍞000D    We  could  choose  to extend primitive operator each (¨) to "apply" an array⍞000D    operand  to  each  item  of  its argument. Then sub-expression {''##''}¨ above⍞000D    could be replaced with just ''##''¨.⍞000D⍞000D        ''##''¨ ''...''⍞000D    ┌──┬──┬──┐⍞000D    │##│##│##│⍞000D    └──┴──┴──┘⍞000D⍞000D        0¨⍳2 3⍞000D    0 0 0⍞000D    0 0 0⍞000D)⍞000D⍞000DExamples:⍞000D⍞000D    ncpath''display''                     ⍝ display is a function.⍞000D3⍞000D    notes.⎕nc''display''                  ⍝ display is a variable in notes.⍞000D2⍞000D    notes ncpath''display''               ⍝ no display function in notes.⍞000D0⍞000D    ncpath↑''display'' ''rows''             ⍝ rows is an operator.⍞000D3 4⍞000D⍞000D    ⎕path←''⎕se''                         ⍝ set ⎕path for utility fns.⍞000D⍞000D    ⎕se.dup←{⍵ ⍵}                       ⍝ make a duplicator fn in ⎕se.⍞000D⍞000D    dup 33                              ⍝ function reference using ⎕path.⍞000D33 33⍞000D⍞000D    ⎕nc''dup''                            ⍝ no dup in current space.⍞000D0⍞000D    ncpath''dup''                         ⍝ dup is a fn somewhere on ⎕path.⍞000D3⍞000D⍞000DSee also: refs⍞000D⍞000DIndex:name classification|classification, name|⎕NC, extended⍞000DIndex;Johns M.' 
