'cvex ←    {width} ##.hex nums               ⍝ Hexadecimal from decimal.⍞000Dnums ← {signed←0} ##.dec cvex               ⍝ Decimal from hexadecimal.⍞000D⍞000D[hex] and [dec] convert between arrays of decimal numbers and their  hexadecimal⍞000Dequivalents.⍞000D⍞000DHex''s optional left argument {width} specifies the number of  hexadecimal digits⍞000Drequired. Width defaults to 2, 4, 8 or 16 depending on the magnitude of the arg-⍞000Dument.⍞000D⍞000DDec''s optional left argument {signed} determines whether  a  hexadecimal  number⍞000Dwhose first digit is in the range 8..f is to  be interpreted as a signed or  un-⍞000Dsigned (default) number.⍞000D⍞000DRestriction: [hex] will not accept numbers whose magnitude means  that  adding 1⍞000Dwill make no difference.  This means a  maximum  of  around 2*53 for a number of⍞000D⎕DR-type 645.⍞000D⍞000DExamples:⍞000D⍞000D    hex 12 34 56                            ⍝ (result is nested).⍞000D┌──┬──┬──┐⍞000D│0c│22│38│⍞000D└──┴──┴──┘⍞000D⍞000D    hex 100×⍳6                              ⍝ larger numbers.⍞000D 0064  00c8  012c  0190  01f4  0258⍞000D⍞000D    hex 100000×⍳4                           ⍝ even larger numbers.⍞000D 000186a0  00030d40  000493e0  00061a80⍞000D⍞000D    hex 4 5⍴⍳20                             ⍝ array of numbers.⍞000D 01  02  03  04  05⍞000D 06  07  08  09  0a⍞000D 0b  0c  0d  0e  0f⍞000D 10  11  12  13  14⍞000D⍞000D    4 hex 4 5⍴⍳20                           ⍝ specify width.⍞000D 0001  0002  0003  0004  0005⍞000D 0006  0007  0008  0009  000a⍞000D 000b  000c  000d  000e  000f⍞000D 0010  0011  0012  0013  0014⍞000D⍞000D    dec''3e8''                                ⍝ convert to decimal.⍞000D1000⍞000D    dec''3E8''                                ⍝ upper case A-Z is OK, too.⍞000D1000⍞000D    dec hex 2 4 5⍴⍳40                       ⍝ convert both ways.⍞000D 1  2  3  4  5⍞000D 6  7  8  9 10⍞000D11 12 13 14 15⍞000D16 17 18 19 20⍞000D⍞000D21 22 23 24 25⍞000D26 27 28 29 30⍞000D31 32 33 34 35⍞000D36 37 38 39 40⍞000D⍞000D    hex saw(1 2 3)(100 200 300)             ⍝ nested array.⍞000D┌──────────┬────────────────┐⍞000D│┌──┬──┬──┐│┌────┬────┬────┐│⍞000D││01│02│03│││0064│00c8│012c││⍞000D│└──┴──┴──┘│└────┴────┴────┘│⍞000D└──────────┴────────────────┘⍞000D⍞000D    dec hex (1 2 3)(100 200 300)            ⍝ full circle.⍞000D 1 2 3  100 200 300⍞000D⍞000D⍝ hex of negative integers returns 2''s complement or "unsigned" hex number:⍞000D⍞000D    hex ¯3 to 3                             ⍝ hex of negative numbers.⍞000D fd  fe  ff  00  01  02  03⍞000D⍞000D    1 dec hex ¯3 to 3                       ⍝ round trip if signed.⍞000D¯3 ¯2 ¯1 0 1 2 3⍞000D⍞000D    0 dec hex ¯3 to 3                       ⍝ non-round trip if unsigned.⍞000D253 254 255 0 1 2 3⍞000D⍞000D    hex 2*53                                ⍝ number too big.⍞000DToo big⍞000D    hex 2*53⍞000D   ∧⍞000D⍞000DSee also: int saw hexf⍞000DSee also: ary phinary bt⍞000D⍞000DIndex:hexadecimal|decimal (from hex)' 
