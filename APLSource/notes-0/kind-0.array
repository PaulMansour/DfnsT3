'kinds ← ##.kind namelist                    ⍝ Parse-category of name(s) ⍵.⍞000D⍞000DA necessary and sufficient prerequisite for parsing an APL expression is to cat-⍞000Degorise any _names_ into one of four "kinds" depending on their referent values:⍞000D⍞000D    1: Nilad (array, namespace or niladic function),⍞000D    2: Function (non-niladic),⍞000D    3: Monadic-operator,⍞000D    4: Dyadic-operator.⍞000D⍞000DA value of 0 is returned for an undefined name.⍞000D⍞000DThe expression (X Y Z) could be parsed in several ways depending on the kinds of⍞000DX, Y and Z. Here are just two possibilities:⍞000D⍞000D    X Y Z  →  ┌┴─┐      ⍝ X:function Y:dyadic-operator Z:nilad      cf: +∘1⍞000D    2 4 1     X ┌┴┐                    ¯¯¯¯¯¯⍞000D                Y Z⍞000D⍞000D    X Y Z  →   ┌┴─┐     ⍝ X:function Y:monadic-operator Z:nilad     cf: ⍴¨2⍞000D    2 3 1     ┌┴┐ Z                    ¯¯¯¯¯¯¯⍞000D              X Y⍞000D⍞000DFunction →parse← illustrates the syntax trees:⍞000D⍞000D        scripts._dyalog parse''+∘1''      ⍝ +∘1 → +(∘1)  right-operand currying⍞000D     F⍞000D    ┌┴─┐⍞000D    + ┌┴┐⍞000D      ∘ 1⍞000D        scripts._dyalog parse''⍴¨1''      ⍝ ⍴¨1 → (⍴¨)1  app of derived fn to arg⍞000D      A⍞000D     ┌┴─┐⍞000D    ┌┴┐ 1⍞000D    ⍴ ¨⍞000D⍞000DDyalog''s four hybrid tokens: / ⌿ \ ⍀  may be assigned a name.  [kind] classifies⍞000Dsuch  names as 2.5 though their effective kind will be determined dynamically at⍞000Drun-time.⍞000D⍞000D      slash ← /         ⍝ naming of hybrid token⍞000D⍞000D      1 2 slash¨ 3 4    ⍝ slash interpreted as function:2⍞000D┌─┬───┐⍞000D│3│4 4│⍞000D└─┴───┘⍞000D      +slash 1 2 3 4    ⍝ slash interpreted as operator:3⍞000D10⍞000D      kind''slash''       ⍝ [kind] categorises slash as hybrid:2.5⍞000D2.5⍞000D⍞000DExamples:⍞000D⍞000D    (kind,⊢) ''qqq'' ''notes'' ''gcd'' ''saw'' ''at''     ⍝ names from this ws⍞000D0 qqq⍞000D1 notes⍞000D2 gcd⍞000D3 saw⍞000D4 at⍞000D⍞000D    (↑ ⍋ ⊃¨∘⊂ ↓) ,∘≢⌸ kind ⎕nl ⍳10  ⍝ number of nilads, fns, mops and dops in ws⍞000D1   2⍞000D2 200⍞000D3  40⍞000D4  21⍞000D⍞000D    kind ⎕fx''nilfn'' ''''              ⍝ niladic function parsed as nilad⍞000D1⍞000D    slash←/ ⋄ kind''slash''           ⍝ kind of hybrid⍞000D2.5⍞000D⍞000DSee also: kk⍞000DSee also: http://www.dyalog.com/blog/2015/06/response-to-name-colouring-for-dfns⍞000D⍞000DIndex:kind|nameclass|category|name colouring|hybrid' 
