'{fns} ← {space←⎕this} ##.fnrepl (from to)       ⍝ Function string replacement.⍞000D⍞000D[fnrepl]  replaces  occurrences of string [from] with string [to] in all defined⍞000Dfunctions  and operators in [space] (default current space). The shy result is a⍞000Dlist of the names of functions that have been changed.⍞000D⍞000DExample:⍞000D⍞000D      fnrepl ''⎕TCNL'' ''⍙TCNL''        ⍝ change all ⎕TCNL → ⍙TCNL in current space.⍞000D⍞000D      (refs #)fnrepl¨⊂''foo'' ''bar''   ⍝ change ''foo'' to ''bar'' everwhere.⍞000D⍞000D      find''⍺∘,¨''                    ⍝ find fns containing ''⍺∘,¨''.⍞000D #.packH[16]  ↑,/(⍺∘,¨0 1)∇¨⍵             ⍝ extended codes for sub-trees.⍞000D #.packH[39]  ↑,/(⍺∘,¨0 1)∇¨⍵             ⍝ visit each branch,⍞000D #.queens[6]  next←⍺∘,¨hd                 ⍝ possible next steps.⍞000D⍞000D      fnrepl''⍺∘,¨'' ''(⊂⍺),¨''         ⍝ show changed functions.⍞000D┌─────┬──────┐⍞000D│packH│queens│⍞000D└─────┴──────┘⍞000D⍞000D      find''(⊂⍺),¨''                  ⍝ find fns containing ''(⊂⍺),¨''.⍞000D #.packH[16]  ↑,/((⊂⍺),¨0 1)∇¨⍵             ⍝ extended codes for sub-trees.⍞000D #.packH[39]  ↑,/((⊂⍺),¨0 1)∇¨⍵             ⍝ visit each branch,⍞000D #.packS[6]   1=⍴,⍵:2,⍺ ⋄ a←(⊂⍺),¨0 1⍞000D #.queens[6]  next←(⊂⍺),¨hd                 ⍝ possible next steps.⍞000D⍞000DSee also: refs⍞000D⍞000DIndex:string replacement' 
