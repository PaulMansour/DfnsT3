'cvec ← ##.exit code                         ⍝ Return to calling environment.⍞000D⍞000DSome "closed workspaces" like to call ⎕OFF when their task is complete. This can⍞000Dcan  be  irritating during testing or if the workspace was executed as part of a⍞000Dcontinuing interactive session. [exit] infers if this is the case by determining⍞000Dwhether there is a six-space input prompt in the session log following the init-⍞000Dial Dyalog APL banner.⍞000D⍞000DThe  result is the character vector format of [exit]''s argument, preceded by the⍞000Dvector ''⎕OFF '' only if it decides there is no session to which to return. [code]⍞000Dis typically a small integer "exit code" with 0 meaning success.⍞000D⍞000D[exit] _returns_ a character vector, rather than _executing_ it, to  reduce  the⍞000Dprobability of accidental termination of APL during testing.⍞000D⍞000DSo, with a closed workspace, instead of:⍞000D⍞000D    ⎕LX←''main ⋄ ⎕OFF 0''⍞000D⍞000Dwe might prefer:⍞000D⍞000D    ⎕LX←''main ⋄ ⍎ exit 0''⍞000D⍞000DWith the latter coding, the ⎕LX expression will exit to the session, rather than⍞000Dterminating the process, if there has been any prior session interaction.⍞000D⍞000DBugs:⍞000D⍞000D[exit] will incorrectly assume a non-interactive session to be interactive if:⍞000D⍞000D1. The session output contains a line with six or more explicit leading blanks.⍞000D⍞000D2. The session output has been sufficiently voluminous to cause the log to over-⍞000D   flow, losing the line with the "Dyalog APL" banner.⍞000D⍞000DIn both of these cases, [exit] fails safe by omitting the ''⎕OFF'' vector from its⍞000Dresult and thus prescribing a return to the session  (rather than termination of⍞000Dthe APL process).⍞000D⍞000DExamples:⍞000D⍞000D        '' 0'' ≡ exit 0   ⍝ in an interactive session.⍞000D⍞000D    ''⎕OFF 0'' ≡ exit 0   ⍝ in a runtime application.⍞000D⍞000DSee also: refws' 
