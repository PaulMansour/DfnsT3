'──────────⍞000DNamespaces⍞000D──────────⍞000DWith  the  advent  of  namespace  references  (refs)  in version 9.0, code which⍞000Dtraverses  a  namespace  structure,  must make special arrangements to avoid the⍞000D"infinite"  recursion  that  may occur if a space contains a reference to one of⍞000Dits ancestors. The way of avoiding this problem, used by the →refs← function, is⍞000Dto  maintain  a  list of spaces already visited, and so avoid visiting any space⍞000Dmore  than  once.  Alternatively,  the  →tree←  function just "gives up" when it⍞000Dencounters a ref which is not an immediate child of the current space.⍞000D⍞000DExample:⍞000D⍞000D      )ns x⍞000D#.x⍞000D      x.ref←x               ⍝ cyclic ref⍞000D⍞000D      x.ref⍞000D#.x⍞000D      x.⎕nl 9⍞000Dref⍞000D      x.ref.⎕nl 9⍞000Dref⍞000D      x.ref.ref.⎕nl 9⍞000Dref⍞000D      x.ref.ref.ref.ref⍞000D#.x⍞000D⍞000D      tree x                ⍝ →tree← function "gives up" on cyclic refs.⍞000D#.x⍞000D·   ref → #.x⍞000D⍞000D      refs x                ⍝ →refs← function visits each space exactly once.⍞000D #.x⍞000D⍞000DSee also: refs tree xrefs⍞000D⍞000DIndex:namespace' 
