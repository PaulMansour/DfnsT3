'Co-operators⍞000D¯¯¯¯¯¯¯¯¯¯¯¯⍞000DA number of the operators in this workspace are designed to co-operate in  mult-⍞000Diple instances within a derived function:⍞000D⍞000D    f co_op g co_op h co_op k ... argument     ⍝ typical co-operator expression.⍞000D⍞000Dwith expression tree:⍞000D⍞000D             ┌──┴──┐⍞000D            ...  argument⍞000D             │⍞000D          ┌co_op┐⍞000D          │     │⍞000D       ┌co_op┐  k⍞000D       │     │⍞000D    ┌co_op┐  h⍞000D    │     │⍞000D    f     g⍞000D⍞000DNotice  that  co-operators  are always dyadic but may produce a monadic or ambi-⍞000Dvalent derived function.⍞000D⍞000DA typical use of a co-operator is for the left argument to select which  monadic⍞000Doperand function should be applied to the right argument.⍞000D⍞000D... to be continued⍞000D⍞000DExamples are:⍞000D⍞000D    →case←  Select statement.⍞000D    →cond←  Conditional function application.⍞000D    →for←   Multiple selection of function list.⍞000D    →fork←  Function fork.⍞000D    →lof←   List of functions.⍞000D    →of←    Pick''th fn applied to arg.⍞000D    →vof←   Vector of functions.⍞000D⍞000DIndex:co-operator' 
