'refs ← (fn ##.fnarray) fns              ⍝ Array of functions.⍞000D⍞000DMaria Wells suggests this operator to produce an array of functions. The operat-⍞000Dor accumulates a vector of namespace refs, each containing a single function f.⍞000D⍞000DThe  functions  contained  in each space can be applied to or between scalars or⍞000Dsimilarly shaped arrays by using the "reference array" syntax: refs.f.⍞000D⍞000DNote that the resulting function vector may be reshaped to form a function array⍞000Dof any rank and depth; see examples below.⍞000D⍞000DExamples:⍞000D⍞000D    flist ← + fnarray - fnarray × fnarray ''''        ⍝ 3-vector of fns: + - ×.⍞000D⍞000D    flist.f 1 2 3                                   ⍝ monadic application.⍞000D1 ¯2 1⍞000D⍞000D    1 2 3 flist.f 4 5 6                             ⍝ dyadic application.⍞000D5 ¯3 18⍞000D⍞000D    fns← ⌈fnarray  ⌊fnarray ⍬                       ⍝ 2-vector of fns ⌈ ⌊.⍞000D⍞000D    fns.f 3.5                                       ⍝ scalar ceiling and floor.⍞000D4 3⍞000D    fns.f 2.3 4.5                                   ⍝ vector ceiling and floor.⍞000D3 4⍞000D    5 10 fns.f 8 12                                 ⍝ dyadic max and min.⍞000D8 10⍞000D⍞000D    fmat←2 2⍴+fnarray -fnarray ×fnarray ÷fnarray⍬   ⍝ 2×2 matrix of + - × ÷⍞000D⍞000D    fmat.⎕cr''f''                                     ⍝ show function matrix.⍞000D┌─┬─┐⍞000D│+│-│⍞000D├─┼─┤⍞000D│×│÷│⍞000D└─┴─┘⍞000D⍞000D    10 fmat.f 2                                     ⍝ fn mat between scalars.⍞000D12 8⍞000D20 5⍞000D⍞000D    fmat.f ⍳2 2                                     ⍝ apply fmat to matrix arg.⍞000D┌───┬───────┐⍞000D│1 1│¯1 ¯2  │⍞000D├───┼───────┤⍞000D│1 1│0.5 0.5│⍞000D└───┴───────┘⍞000D⍞000D    fvex←↓fmat                                      ⍝ nested array of functions.⍞000D⍞000D    fvex.⎕cr''f''                                     ⍝ display function array.⍞000D┌─────┬─────┐⍞000D│┌─┬─┐│┌─┬─┐│⍞000D││+│-│││×│÷││⍞000D│└─┴─┘│└─┴─┘│⍞000D└─────┴─────┘⍞000D⍞000D    20 fvex.f ⊂⊂4 5 10                              ⍝ 3-way conformability.⍞000D┌───────────────────┬──────────────────┐⍞000D│┌────────┬────────┐│┌──────────┬─────┐│⍞000D││24 25 30│16 15 10│││80 100 200│5 4 2││⍞000D│└────────┴────────┘│└──────────┴─────┘│⍞000D└───────────────────┴──────────────────┘⍞000D⍞000D    fnest←,∘⊂\,fmat                                 ⍝ nastily nested array.⍞000D⍞000D    fnest.⎕cr''f''                                    ⍝   ..      ..   functions.⍞000D┌─┬─────┬─────────┬─────────────┐⍞000D│+│┌─┬─┐│┌─┬─────┐│┌─┬─────────┐│⍞000D│ ││+│-│││+│┌─┬─┐│││+│┌─┬─────┐││⍞000D│ │└─┴─┘││ ││-│×││││ ││-│┌─┬─┐│││⍞000D│ │     ││ │└─┴─┘│││ ││ ││×│÷││││⍞000D│ │     │└─┴─────┘││ ││ │└─┴─┘│││⍞000D│ │     │         ││ │└─┴─────┘││⍞000D│ │     │         │└─┴─────────┘│⍞000D└─┴─────┴─────────┴─────────────┘⍞000D⍞000D    12 fnest.f 3                                    ⍝ deep function application.⍞000D┌──┬────┬─────────┬─────────────┐⍞000D│15│15 9│┌──┬────┐│┌──┬────────┐│⍞000D│  │    ││15│9 36│││15│┌─┬────┐││⍞000D│  │    │└──┴────┘││  ││9│36 4│││⍞000D│  │    │         ││  │└─┴────┘││⍞000D│  │    │         │└──┴────────┘│⍞000D└──┴────┴─────────┴─────────────┘⍞000D⍞000D⍝ Function arrays need not be named:⍞000D⍞000D      (+fnarray -fnarray ⍬).f 1 2                   ⍝ raw monadic application.⍞000D1 ¯2⍞000D⍞000D      10 20(+fnarray -fnarray ⍬).f 1 2              ⍝ raw dyadic application.⍞000D11 18⍞000D⍞000DSee also: Function_arrays⍞000D⍞000DIndex:function array|function array⍞000DIndex;Wells M.' 
