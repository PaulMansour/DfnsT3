'lvec← {cols←⎕pw} ##.wrap cvec               ⍝ Wrap word vector at ⍺ columns.⍞000D⍞000DThe  argument  vector is split between words at [cols] (default ⎕PW) columns and⍞000Dthe blank replaced with a [LF] character. The resulting line-vector will display⍞000Din  the  session in [cols] or fewer columns. Words longer than [cols] are broken⍞000Dunceremoniously at [cols] columns.⍞000D⍞000DTechnical notes:⍞000D⍞000DCompare Bob Smith''s amazing non-looping solution:⍞000D⍞000D    wrap←{                  ⍝ ⍺-wrap (Bob Smith).⍞000D        ⍺←⎕pw               ⍝ default ⎕pw-wrap⍞000D        v←'' '',⍵,'' ''         ⍝ blanks required at start and end⍞000D        j←(v='' '')/⍳⍴v       ⍝ indices of blanks⍞000D        p←(j+⍺+1)∘.<j       ⍝ 1s mark blanks past the cutoff⍞000D        m←p<1⌽p             ⍝ mark last blank that fits on the line⍞000D        i←(⍴m)⍴1,(1↓⍴m)⍴0   ⍝ identity matrix⍞000D        c←⌹i-m              ⍝ compute transitive closure of m⍞000D        v[c[1;]/j]←⊃⌽⎕tc    ⍝ insert the line breaks⍞000D        1↓¯1↓v              ⍝ drop the extra blanks⍞000D    }⍞000D⍞000DJohn Daintree suggests this version, which wraps on any of the chars ''-?., '' and⍞000Dreturns a nested vector result:⍞000D⍞000D    wrap←{⎕ML←0 ⋄ ⍺←⎕PW       ⍝ initialize⍞000D        ⍺≥⍴,⍵:,⊂⍵             ⍝ out if short enough⍞000D        sze←(⍵∊''-?., '')/⍳⍴⍵   ⍝ length of each choice⍞000D        len←⊃⌽(⍺≥sze)/sze     ⍝ longest length⍞000D        len←⊃(len∊sze)⌽⍺ len  ⍝ middle of word?⍞000D        (⊂len↑⍵),⍺ ∇ len↓⍵    ⍝ at valid wrap point⍞000D    }⍞000D⍞000DExamples, See: Line_vectors⍞000D⍞000DSee also: unwrap justify squeeze⍞000DSee also: cols⍞000D⍞000DIndex:words|text|line vector|transitive closure⍞000DIndex;Smith R.A.|Daintree J.' 
