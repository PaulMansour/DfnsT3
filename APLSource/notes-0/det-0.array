'num ← ##.det nmat                           ⍝ Determinant of square matrix.⍞000D⍞000DFrom Roger Hui,  [det] uses Gaussian elimination & Laplace expansion to find the⍞000Ddeterminant of square matrix [nmat].⍞000D⍞000D[det] finds the maximal entry in the entire matrix, not just the  maximal  entry⍞000Din column 0 (i.e. it does "full pivoting".).  It doesn''t do row or column inter-⍞000Dchanges at all.  Instead,  after  Gaussian  elimination to zero out the i-th row⍞000D(other than column j) or zero out the j-th column (other than row i),  it does a⍞000DLaplace expansion on the i-th row (or the j-th column).  Post-Gaussian eliminat-⍞000Dion, either expansion has just one non-zero  co-factor, that is,  just one minor⍞000D∇ ⍵[k~i;k~j] with a non-zero coefficient ⍵[i;j]×¯1*i+j,  and that coefficient is⍞000Dmultiplied by ⍺ on the tail call.⍞000D⍞000DAlternative codings⍞000D-------------------⍞000DAlso from Roger, an earlier draft of [det]:⍞000D⍞000D    det_4a←{⎕io ⎕ml←0⍞000D        ⍺←1                     ⍝ product of diagonal entries so far⍞000D        0=n←⊃⍴⍵:⍺               ⍝ answer for 0-by-0⍞000D        p←{⍵⍳⌈/⍵}|⍵[;0]         ⍝ index of pivot row⍞000D        p=n:0                   ⍝ ⍵ is singular if column is all 0⍞000D        k←⍳n                    ⍝ row indices⍞000D        k[⌽i]←k[i←(×p)/p,0]     ⍝ interchange p and 0, if different⍞000D        (⍺×d×¯1*×p)∇ ⍵[1↓k;1↓⍳n]-(⍵[1↓k;0]÷d←⍵[⊃k;0])∘.×⍵[⊃k;1↓⍳n]⍞000D    }⍞000D⍞000DThe  following  rather  unpleasant  one-line  alternative,  is included just for⍞000Damusement. It is interesting only in that it:⍞000D⍞000D- Is both ⎕IO and ⎕ML independent.⍞000D⍞000D- Has  no  guards  or  local variables. It is a single pure APL expression that,⍞000D  without testing or looping, denotes the determinant of its argument matrix.⍞000D⍞000D- Codes  the  mathematical definition of determinant which is an O(!n) algorithm⍞000D  and so is viable for only the smallest of argument matrices.⍞000D⍞000D- Is the sort of thing that gets APL a bad name.⍞000D⍞000D    detriment←{∇{⍵+(¯1*+/∧\⍺)×⍵⍵[⎕io;⍺⍳0]×⍺⍺ ⍺/1 0↓⍵⍵}⍵/(↓≠/¨⍳⍴⍵),0 0≡⍴⍵}⍞000D⍞000DVMJ suggests this version using the Gaussian method:⍞000D⍞000D    detG←{                                  ⍝ Gaussian determinant.⍞000D        (⎕io ⎕ml)←1 3 ⋄ r←⍴⍵⍞000D        1≥×/r:↑⍵ ⋄ 2≠⍴r:0 ⋄ ≠/r:0           ⍝ check for trivial cases⍞000D        1{                                  ⍝ inner loop⍞000D            2>↑⍴⍵:↑⍺×⍵                      ⍝ end? -> result⍞000D            (m a c)←{                       ⍝ calculate matrix, anchor & coeff⍞000D                0≠1⍴⍵:⍵(1⍴⍵)1               ⍝ default: original matrix⍞000D                z←⍵ ⋄ j←{⍵⍳⌈/⍵}|z[;1]       ⍝ look for 1st non-zero⍞000D                z[1,j;]←z[j,1;]             ⍝ reorder matrix⍞000D                z(1⍴z)¯1                    ⍝ NB. coeff=¯1⍞000D            }⍵⍞000D            a=0:0                           ⍝ row of zeroes..⍞000D            (⍺×a×c)∇ 1 1↓m-m[;1]∘.×m[1;]÷a  ⍝ re-curses!⍞000D        }⍵⍞000D    }⍞000D⍞000Dand ...⍞000D⍞000D    det_mv←{        ⍝ Matrix determinant, based on Mahajan-Vinay algorithm:⍞000D⍞000D        ⍝|  Meena Mahajan and V Vinay.⍞000D        ⍝|   Determinant: Combinatorics, Algorithms, and Complexity⍞000D        ⍝|    http://www.imsc.ernet.in/~meena/publ.html⍞000D⍞000D        (⎕io ⎕ml)←0 3 ⋄ mat←⍵ ⋄ n←↑⍴mat⍞000D        V←(2,3/n)⍴0 ⋄ V[2|n;;;0]←1⍞000D⍞000D        ↑{i←⍵⍞000D            ↑{v←⍵⍞000D                ↑{u←⍵ ⋄ n=⍵+1:0⍞000D                    ↑{⍞000D                        V[0;u;⍵;i+1]+←V[0;u;v;i]×mat[v;⍵]⍞000D                        V[1;⍵;⍵;i+1]+←V[0;u;v;i]×mat[v;u]⍞000D                        V[1;u;⍵;i+1]+←V[1;u;v;i]×mat[v;⍵]⍞000D                        V[0;⍵;⍵;i+1]+←V[1;u;v;i]×mat[v;u]⍞000D                        0⍞000D                    }¨(⍵+1)↓⍳n⍞000D                }¨⍳⍵+1⍞000D            }¨⍳n⍞000D        }¨⍳n-1:⍞000D⍞000D        +/{-+/mat[⍵;⍳⍵+1]×-⌿V[;⍳⍵+1;⍵;n-1]}¨⍳n⍞000D    }⍞000D⍞000DExamples:⍞000D⍞000D    det 2 2⍴2 3 4 5⍞000D¯2⍞000D    det 2 2⍴0 1 1 0⍞000D¯1⍞000D    det 1 1⍴3⍞000D3⍞000D    det 0 0⍴7⍞000D1⍞000D    hil←{÷1+∘.+⍨(⍳⍵)-⎕io}   ⍝ Order ⍵ Hilbert matrix.⍞000D⍞000D    det hil 10⍞000D2.1644805E¯53⍞000D⍞000DSee also: gauss_jordan Cholesky⍞000D⍞000DIndex:determinant|Gaussian method|Hilbert matrix⍞000DIndex;Jantunen V-M.|Gauss C.F.|Hui R.K.W.' 
