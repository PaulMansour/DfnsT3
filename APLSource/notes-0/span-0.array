'tree ← graph ##.span fm     ⍝ Breadth-first span tree for graph ⍺ from vertex ⍵.⍞000D⍞000DReturns a tree that, starting from the given vertex, spans all accessible verti-⍞000Dces  of  the  graph  "breadth-first".  The tree has the property that it has the⍞000Dleast  depth  possible: no spanning tree exists that has a shorter path from its⍞000Droot to any vertex.⍞000D⍞000DMore  generally,  [fm] may be a _vector_ of vertices, in which case the breadth-⍞000Dfirst search starts in parallel from each given vertex.⍞000D⍞000DThe  tree is returned in compact form: each item of the vector, with the except-⍞000Dion of the root item, is the index of the tree node''s parent node.⍞000D⍞000DThe  following  operator  may be used to display the tree in an indented format.⍞000DThe function operand takes a vertex number and returns a label:⍞000D⍞000D      mtree←{⎕ML←0                  ⍝ Matrix format of spanning tree.⍞000D          vfmt←⍺⍺                   ⍝ vertex format function.⍞000D          tree←⍵                    ⍝ spanning tree.⍞000D          ↑''''{                      ⍝ mix to char matrix.⍞000D              this←⊂⍺,⊃vfmt ⍵       ⍝ indented, formatted vertex.⍞000D              next←(tree=⍵)/⍳⍴tree  ⍝ child vertices of current vertex ⍵.⍞000D              next≡⍬:this           ⍝ childless: finished.⍞000D              dent←⍺,''·   ''         ⍝ increased indent.⍞000D              this,↑,/dent∘∇¨next   ⍝ formatted sub-trees.⍞000D          }tree⍳¯1                  ⍝ ... from starting vertex.⍞000D      }⍞000D⍞000D... and this function displays the tree in list format:⍞000D⍞000D      ltree←{                       ⍝ List format of spanning tree.⍞000D          tree←⍵                    ⍝ spanning tree.⍞000D          bkt←{''['',⍵,'']''}           ⍝ bracket.⍞000D          sep←{↑{⍺,'', '',⍵}/⍵}       ⍝ comma-separate.⍞000D          {                         ⍝ radiate outwards from root:⍞000D              next←(tree=⍵)/⍳⍴tree  ⍝ nodes that point to this one.⍞000D              next≡⍬:⍕⍵             ⍝ none: finished.⍞000D              bkt sep(⊂⍕⍵),∇¨next   ⍝ node followed by sub-trees.⍞000D          }⍵⍳¯1                     ⍝ starting from root.⍞000D      }⍞000D⍞000DTechnical notes:⍞000D⍞000DThis coding differs slightly from classic breadth-first search, see →bfs←.⍞000D⍞000DExamples:⍞000D⍞000D⍝      Graph "a".⍞000D⍝    ┌─────1←────┐   5 vertices: 1 2 3 4 5⍞000D⍝    │     │     │⍞000D⍝    ↓     ↓     │   8 edges:    1→2  1→3⍞000D⍝    2←───→3────→4               2→3⍞000D⍝          ↑     │               3→2  3→4⍞000D⍝          │     ↓               4→1  4→5⍞000D⍝          └─────5               5→3⍞000D⍞000D      a←(2 3)(3)(2 4)(1 5)(3)       ⍝ simple origin-1 graph.⍞000D⍞000D      show←{↑⍕¨(⍳⍴⍵),¨''→'',¨⍵}       ⍝ show graph.⍞000D⍞000D      show a                        ⍝ graph "a".⍞000D1 → 2 3⍞000D2 → 3⍞000D3 → 2 4⍞000D4 → 1 5⍞000D5 → 3⍞000D⍞000D      a span 1                      ⍝ spanning tree from vertex 1.⍞000D¯1 1 1 3 4⍞000D⍞000D      a span 3                      ⍝ spanning tree from vertex 3.⍞000D4 3 ¯1 3 4⍞000D⍞000D      ⍕mtree a span 3               ⍝ formatted spanning tree from vertex 3.⍞000D3⍞000D·   2⍞000D·   4⍞000D·   ·   1⍞000D·   ·   5⍞000D⍞000D      ltree a span 3                ⍝ list-format spanning tree from vertex 3.⍞000D[3, 2, [4, 1, 5]]⍞000D⍞000D      ↑{ltree a span ⍵}¨⍳⍴a         ⍝ list format for all of a''s span trees.⍞000D[1, 2, [3, [4, 5]]]⍞000D[2, [3, [4, 1, 5]]]⍞000D[3, 2, [4, 1, 5]]⍞000D[4, [1, 2, 3], 5]⍞000D[5, [3, 2, [4, 1]]]⍞000D⍞000D    gx←(2 5)(1 3 6)(2 4 7)(3 8)(1 6 9)(2 5)(3 8)(4 7 12)(5 10 13)(9 14)(12 15)(8 11 16)(9 14)(10 13 15)(11 14 16)(12 15)⍞000D⍞000D    ⍝   graph gx:                       breadth-first visiting sequence:⍞000D    ⍝⍞000D    ⍝   1───────2───────3───────4      [1]─────[2]─────[3]─────[4] c.f. →dfspan←⍞000D    ⍝   │       │       │       │       │               │⍞000D    ⍝   │       │       │       │       │               │⍞000D    ⍝   │       │       │       │       │               │⍞000D    ⍝   5───────6       7───────8      [2]─────[3]     [4]─────[5]⍞000D    ⍝   │                       │       │                       │⍞000D    ⍝   │                       │       │                       │⍞000D    ⍝   │                       │       │                       │⍞000D    ⍝   9──────10      11──────12      [3]─────[4]     [7]     [6]⍞000D    ⍝   │       │       │       │       │               │⍞000D    ⍝   │       │       │       │       │               │⍞000D    ⍝   │       │       │       │       │               │⍞000D    ⍝  13──────14──────15──────16      [4]─────[5]─────[6]─────[7]⍞000D⍞000D      gx span 1⍞000D¯1 1 2 3 1 5 3 7 5 9 15 8 9 13 14 15⍞000D⍞000DSee also: Graphs bfs stpath path search dfspan⍞000D⍞000DIndex:graph, unweighted|spanning tree|breadth-first search' 
