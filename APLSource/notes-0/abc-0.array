'-------------------------------------------------⍞000DArithmetic Boundary Checking - Stephen M. Mansour⍞000D-------------------------------------------------⍞000DA  point partitions a line into three disjoint subsets: the set of points to its⍞000Dleft,  the point itself and the set of points to its right. Relational functions⍞000Dproduce  two results 0 and 1, effectively partitioning a line into only two sub-⍞000Dsets. A technique, known as arithmetic boundary checking, uses arithmetic funct-⍞000Dions instead of relational and Boolean functions to determine where a point lies⍞000Din a line or a plane.⍞000D⍞000DRelational Functions⍞000D--------------------⍞000DRelational  functions  ask  the question: is the statement true or false? If the⍞000Dstatement  ⍺<⍵ is true, we have all the information we need, but if it is false,⍞000Dwe  don''t know whether ⍺=⍵ or ⍺>⍵. To get a complete picture, we need to perform⍞000Da  second  test. The dynamic function bp performs two tests to produce a Boolean⍞000Dpair:⍞000D⍞000D    bp←{⊃(⍺<⍵)(⍺>⍵)}    ⍝ Boolean pair (2-vector)⍞000D⍞000D    2 3 4 bp 3          ⍝ ⍺<⍵←→1 0 ⋄ ⍺=⍵←→0 0 ⋄ ⍺>⍵←→0 1⍞000D1 0 0⍞000D0 0 1⍞000D⍞000DWhile  this preserves information, there are two problems. First, it seems some-⍞000Dwhat redundant to do two similar comparisons, and second, we would like a scalar⍞000Dresult because it will allow us to work more easily with arrays of data.⍞000D⍞000DSignum Difference⍞000D-----------------⍞000DThe signum function (×) naturally partitions a line into three disjoint subsets,⍞000Dby  producing  three  results  (-1, 0, 1). We can apply signum to the difference⍞000Dbetween  a  value and the boundary point to produce the signum difference, which⍞000Dasks a more specific question, i.e. what is the relationship between ⍺ and ⍵?⍞000D⍞000D    xd←{×⍺-⍵}           ⍝ Signum difference⍞000D⍞000D    2 3 4 xd 3          ⍝ ⍺<⍵←→¯1 ⋄ ⍺=⍵←→0 ⋄ ⍺>⍵←→1⍞000D¯1 0 1⍞000D⍞000DNotice that bp produces the two-bit binary representation of the ones complement⍞000Dof  the result of xd. Alternatively, we could produce the same result as that of⍞000Dxd  by subtracting the left bit from the right bit of the ones complement in the⍞000Dfunction bd listed below :⍞000D⍞000D    bd←{(⍺>⍵)-(⍺<⍵)}    ⍝ Boolean difference⍞000D⍞000D    2 3 4 bd 3          ⍝ ⍺<⍵←→¯1 ⋄ ⍺=⍵←→0 ⋄ ⍺>⍵←→1⍞000D¯1 0 1⍞000D⍞000DHowever, a performance test in Dyalog Version 10 shows that xd runs significant-⍞000Dly faster than bd:⍞000D⍞000D    U←1E¯4×500000-?100⍴1E6⍞000D    V←1E¯4×500000-?100⍴1E6⍞000D⍞000D    cmpx ''U xd V'' ''U bd V''⍞000D  U xd V 2.2E¯5   0% ⎕⎕⎕⎕⎕⎕⎕⎕⎕⎕⎕⎕⎕⎕⎕⎕⎕⎕⎕⎕⎕⎕⎕⎕⎕⎕⍞000D  U bd V 3.4E¯5 +52% ⎕⎕⎕⎕⎕⎕⎕⎕⎕⎕⎕⎕⎕⎕⎕⎕⎕⎕⎕⎕⎕⎕⎕⎕⎕⎕⎕⎕⎕⎕⎕⎕⎕⎕⎕⎕⎕⎕⎕⎕⍞000D⍞000DIntervals⍞000D---------⍞000DAn  interval  is indicated by two distinct points on the real line. The interval⍞000Dincludes the interior and may include one or both of the end-points. An interval⍞000Dis  open  if it excludes the end-points; closed if it includes both of them, and⍞000Dhalf-open  if  it includes only one of them. A half-open interval can be open on⍞000Dthe  left or on the right. The four types of intervals can be described by comb-⍞000Dining relational functions into the operator rg:⍞000D⍞000D    rg←{(⍺[0]⍺⍺ ⍵)∧⍺[1]⍵⍵ ⍵}            ⍝ Range Operator⍞000D⍞000D    1 3 <rg> ⍳5  ⍝ Open Interval:       ○-----------○⍞000D0 0 1 0 0⍞000D⍞000D    1 3 ≤rg≥ ⍳5  ⍝ Closed Interval:     ⍟-----------⍟⍞000D0 1 1 1 0⍞000D⍞000D    1 3 <rg≥ ⍳5  ⍝ Half-Open Left:      ○-----------⍟⍞000D0 0 1 1 0⍞000D⍞000D    1 3 ≤rg> ⍳5  ⍝ Half-Open Right:     ⍟-----------○⍞000D0 1 1 0 0⍞000D⍞000DThis  operator  is  still  limited  in that it does not differentiate between an⍞000Dinterior point and a boundary (limit) point.⍞000D⍞000DPartitions⍞000D----------⍞000DA  pair  of distinct points on the real line can define two types of partitions:⍞000Dan interval partition and a range partition.⍞000D⍞000DAn  "interval partition" divides the real line into three disjoint subsets:  the⍞000Dinterior (between the end-points), the boundary (the two end-points themselves),⍞000Dand the outside  (everything else).⍞000D⍞000D   Outside      Bound   Interior     Bound    Outside⍞000D <----------------|--------------------|----------------->⍞000D      1           0         ¯1         0         1⍞000D⍞000DThe  product of the signum differences between a specified point and each of the⍞000Dboundary  points  will  indicate  whether  the  point falls in the interior, the⍞000Dboundary,  or outside. If the point is outside the interval, the differences are⍞000Dboth  positive,  or both negative so their signum product is +1. If the point is⍞000Don  the  boundary, one of the differences is zero, thus the product is zero. And⍞000Dif  the  point  is  in the interior, the differences have opposite signs, so the⍞000Dsignum product is -1.⍞000D⍞000DA range partition divides the real line into five disjoint regions: below, lower⍞000Dbound (L.B.), interior, upper bound (U.B.)  and above:⍞000D⍞000D      Below      L.B.     Interior    U.B.   Above⍞000D <----------------|--------------------|----------------->⍞000D       ¯2        ¯1          0        +1      +2⍞000D⍞000D    ┌───────────┬─────────┬─────────┬───────┬───────┐⍞000D    │           │A←P xd LB│B←P xd UB│xp: A×B│xs: A+B│⍞000D    ├───────────┼─────────┼─────────┼───────┼───────┤⍞000D    │Below      │   ¯1    │   ¯1    │   1   │  ¯2   │⍞000D    ├───────────┼─────────┼─────────┼───────┼───────┤⍞000D    │Lower bound│    0    │   ¯1    │   0   │  ¯1   │⍞000D    ├───────────┼─────────┼─────────┼───────┼───────┤⍞000D    │Interior   │    1    │   ¯1    │  ¯1   │   0   │⍞000D    ├───────────┼─────────┼─────────┼───────┼───────┤⍞000D    │Upper bound│    1    │    0    │   0   │   1   │⍞000D    ├───────────┼─────────┼─────────┼───────┼───────┤⍞000D    │Above      │    1    │    1    │   1   │   2   │⍞000D    └───────────┴─────────┴─────────┴───────┴───────┘⍞000D         Table 1:  Signum Product and Signum Sum⍞000D⍞000DThe sum of the signum differences will produce five distinct values ranging from⍞000D-2 to +2 and corresponding to each of the 5 regions in a range partition.⍞000D⍞000D    xp←{×/×⍵∘.-⍺}       ⍝ Signum product⍞000D⍞000D    1 3 xp ⍳5           ⍝ produces interval partition⍞000D1 0 ¯1 0 1⍞000D⍞000D    xs←{+/×⍵∘.-⍺}       ⍝ Signum sum⍞000D⍞000D    1 3 xs ⍳5           ⍝ produces range partition⍞000D¯2 ¯1 0 1 2⍞000D⍞000DTwo-Dimensional Region Checking⍞000D-------------------------------⍞000DIn a GUI application, you may want to know whether the cursor is within a dialog⍞000Dbox. In particular you may want to know whether the cursor is in the interior of⍞000Dthe box, on the boundary, or outside the box.⍞000D⍞000D                        ┌───────────────┐⍞000D                        │ Interior(¯1)  │   Outside (1)⍞000D         Boundary (0)--→│               │⍞000D                        └───────────────┘⍞000D⍞000D        Figure 1:  Regions in the plane defined by a rectangle⍞000D⍞000DWe now extend the concept of arithmetic boundary checking to two dimensions.⍞000D⍞000DIn  the following example, we have six points in various positions relative to a⍞000Drectangular  region  in  the  plane. The coordinates of the upper left and lower⍞000Dright  corners  of  the  rectangle are  (3,2) and (5,6) respectively. The signum⍞000Dproducts of the x and y coordinates must be calculated separately.⍞000D⍞000D·                               ∘(2,3)⍞000D·⍞000D·⍞000D·   Upper Left --→ (3,2)∘───────────────────────∘(3,5)──┐⍞000D·                       │                               │⍞000D·                       │                               │⍞000D·                       │               ∘(4,4)          │⍞000D·                       │                               │⍞000D·                       │                               │⍞000D·                  (5,2)∘───────────────────────────────∘(5,6) ←-- Lower Right⍞000D·⍞000D·⍞000D·                                                                       ∘(6,8)⍞000D·⍞000D·⍞000D                                                        ∘(7,6)⍞000D⍞000D    Figure 2:  Points in various positions relative to a rectangle in the plane.⍞000D⍞000DIf we take the signum product of the x-coordinate with respect to the row coord-⍞000Dinates and the signum product of the y-coordinate with respect to the column co-⍞000Dordinates, we obtain a ordered pair indicating the position in each direction.⍞000D⍞000DThe following table shows this for the points in Figure 2.⍞000D⍞000D    ┌─────┬───────────┬──────┬─────────┬──────────┐⍞000D    │Point│Description│Row xp│Column xp│Region (⌈)│⍞000D    ├─────┼───────────┼──────┼─────────┼──────────┤⍞000D    │(6,8)│Outside    │   1  │    1    │    1     │⍞000D    ├─────┼───────────┼──────┼─────────┼──────────┤⍞000D    │(5,2)│Corner     │   0  │    0    │    0     │⍞000D    ├─────┼───────────┼──────┼─────────┼──────────┤⍞000D    │(4,4)│Interior   │  ¯1  │   ¯1    │   ¯1     │⍞000D    ├─────┼───────────┼──────┼─────────┼──────────┤⍞000D    │(7,6)│Below      │   1  │    0    │    1     │⍞000D    ├─────┼───────────┼──────┼─────────┼──────────┤⍞000D    │(3,5)│Edge       │  ¯1  │    0    │    0     │⍞000D    ├─────┼───────────┼──────┼─────────┼──────────┤⍞000D    │(2,3)│Above      │   1  │   ¯1    │    1     │⍞000D    └─────┴───────────┴──────┴─────────┴──────────┘⍞000D        Table 2:  Various points in the plane with⍞000D         respect to a defined rectangular region.⍞000D⍞000DIn  order  to  be  in the interior, both coordinates of the point must be in the⍞000Dinterior  of their respective intervals in the x and y directions. If either co-⍞000Dordinate  is  outside, then the point itself is outside. Otherwise, the point is⍞000Don the boundary. In general, the region in which the point resides is the great-⍞000Der of the  partitions in each direction.⍞000D⍞000D    xm←{-/⊃×⌿×⍺,.-⍉⍵}       ⍝ Max Signum⍞000D⍞000D    b←⊃(3 2)(5 6)           ⍝ Upper Left and Lower Right Corners⍞000D⍞000D    b xm⊃(6 8)(5 2)(4 4)(7 6)(3 5)(2 3)     ⍝ Various Points⍞000D1 0 ¯1 1 0 1⍞000D⍞000DThe  left  argument  of the dynamic function xm is a 2 x 2 matrix containing the⍞000Dcoordinates  of  the upper-left and lower-right corners of a rectangular region.⍞000DThe  right  argument is a 2-element vector or 2-column matrix containing the co-⍞000Dordinates of various points in the plane.⍞000D⍞000DSometimes  it is necessary to divide the borders of the dialog box into specific⍞000Dregions.  For example when the cursor is over an edge, it will resize the window⍞000Din  one direction. If it is over a corner, it will resize the window in two dir-⍞000Dections.  The particular edge or corner selected also determines the position of⍞000Dthe resized window.⍞000D⍞000DA  rectangular  region  naturally subdivides the x-y plane into 25 regions, 5 in⍞000Dthe  x  direction  by  5 in the y direction . The following regions are shown in⍞000DFigure 3: 1 interior region, four corners, four edges, and 16 outside regions.⍞000D⍞000D    ┌───────────┬───────────┬───────────┬───────────┬───────────┐⍞000D    │Outside (8)│Outside (8)│Outside (8)│Outside (8)│Outside (8)│⍞000D    ├───────────┼───────────┼───────────┼───────────┼───────────┤⍞000D    │Outside (8)│Upper Left │Upper Edge │Upper Right│Outside (8)│⍞000D    │           │Corner (¯4)│   (¯3)    │Corner (¯2)│           │⍞000D    ├───────────┼───────────┼───────────┼───────────┼───────────┤⍞000D    │Outside (8)│Left Edge  │Interior   │Right Edge │Outside (8)│⍞000D    │           │   (¯1)    │    (0)    │    (1)    │           │⍞000D    ├───────────┼───────────┼───────────┼───────────┼───────────┤⍞000D    │Outside (8)│Lower Left │Bottom Edge│Lower Right│Outside (8)│⍞000D    │           │Corner (2) │    (3)    │Corner (4) │           │⍞000D    ├───────────┼───────────┼───────────┼───────────┼───────────┤⍞000D    │Outside (8)│Outside (8)│Outside (8)│Outside (8)│Outside (8)│⍞000D    └───────────┴───────────┴───────────┴───────────┴───────────┘⍞000D            Figure 3:  25 Regions defined by a rectangle⍞000D⍞000DThe signum sum applied to each coordinate generates an ordered pair.  If we wish⍞000Dto  identify  all 25 regions uniquely, we can use base value with a root of 5 to⍞000Dgenerate  the integers -12 to +12 with 0 representing the interior. More likely,⍞000Dwe  only  wish  to  identify the 9 relevant regions, disregarding the 14 outside⍞000Dregions.   We  can use base value with a root of 3. This will produce the values⍞000D-4  to  +4  with  0 representing the interior. We will assign the value 8 to the⍞000Doutside  regions.  We  can identify a point in the outside region if the ordered⍞000Dpair  of  its  signum sums contains the value 2 or -2. The function xr generates⍞000Dthe appropriate value.⍞000D⍞000D    xr←{d←⍉⊃+/×⍵,.-⍉⍺ ⋄ ((2∨.=|d)/d)←2 ⋄ 3⊥d}⍞000D⍞000D    b xr ⊃(2 3)(3 5)(4 4)(5 2)(6 8)(7 6)⍞000D8 ¯3 0 2 8 8⍞000D⍞000DTheoretical Considerations and Conclusion⍞000D-----------------------------------------⍞000DArithmetic  boundary  checking  is  based upon the topological properties of the⍞000Dreal  line  and  the Euclidean 2-space  [1].  The boundaries of an interval or a⍞000Drectangle  correspond to limit points in topology.  An open interval corresponds⍞000Dto  the  interior set, whereas a closed interval corresponds to the union of the⍞000Dboundary  set  and  the interior set.  A k-cell is defined as an closed interval⍞000Don the real line where k=1 or a closed rectangle in the plane, where k=2. [2]⍞000D⍞000DWhile  Boolean  functions are useful if binary results are adequate, they do not⍞000Dwork  as well when more information is required. Location on the real line or in⍞000Dthe  plane  can  be  determined  arithmetically without the use of Booleans. The⍞000Dternary nature of signum is exploited to handle boundary conditions.⍞000D⍞000DReferences⍞000D----------⍞000D[1] Jerrold Marsden, "Elementary Classical  Analysis"  W.H.Freeman & Co. 1974,⍞000D    Chapter 2, Topology of, pp 32-44.⍞000D⍞000D[2] Walter Rudin, "Priciples of Mathematical Analysis, Third Edition", McGraw-⍞000D    Hill 1976, pp. 31-32 .⍞000D⍞000DSee also: kcell kball⍞000D⍞000DIndex:Arithmetic Boundary Checking|topology|Signum difference|interval|boundary⍞000DIndex;Mansour S.M.|Marsden J.|Rudin W.' 
