'(muse:⍞000D⍞000D    APL Numbers⍞000D    ¯¯¯¯¯¯¯¯¯¯¯⍞000D    Classic APL recognises only "numbers";  it has no interest in their internal⍞000D    representation in binary integer or floating point form.⍞000D⍞000D    Sometimes confused with this internal data type, is the fact that some prim-⍞000D    itive functions have restricted argument domains. For example, the "Boolean"⍞000D    functions  ∧ ∨ ⍲ ⍱  take only arrays of numbers in the set 0 1; the items of⍞000D    the  left  argument  of  reshape (⍴) must be "natural" (non-negative, whole)⍞000D    numbers  0 1 2 ...;  and the relational functions  < ≤ ≥ >  take  only those⍞000D    numbers whose imaginary part is 0. We can see this distinction with express-⍞000D    ions such as:⍞000D⍞000D        1 ∧ 2.5-3÷2     ⍝ right argument of ∧ is 0 or 1⍞000D    1⍞000D        (-¯3) ⍴ 3       ⍝ left argument of ⍴ is non-negative whole number⍞000D    3 3 3⍞000D⍞000D    As a thought experiment, we could propose an APL that supported only ration-⍞000D    al, or even only whole, numbers. In the latter case, 21÷3 would return 7 but⍞000D    21÷2 would generate a domain error. This is analogous to an APL that doesn''t⍞000D    provide complex numbers,  where ¯1*÷3 returns ¯1 but where ¯1*÷2 is a domain⍞000D    error.⍞000D⍞000D    This brings to mind the sequence of generalisation:⍞000D⍞000D        N ⊂ Z ⊂ Q ⊂ R ⊂ C ⊂ H ⊂ O.⍞000D⍞000D    Prefacing this list with B, the boolean numbers 0 and 1, gives:⍞000D⍞000D    B Booleans:                        0 1          ⍝ Boole G. 1815-1864⍞000D     ⊂ N Natural numbers:              0 1 2 ...⍞000D        ⊂ Z Integers:        ... ¯2 ¯1 0 1 2 ...⍞000D           ⊂ Q Rationals:        (4÷3) (¯7÷13) ...⍞000D              ⊂ R Reals:          (*1) (○1) (2*÷2) ...⍞000D                 ⊂ C Complex:      3j4 (¯1*÷2) ...⍞000D                    ⊂ H Quaternions                 ⍝ Hamilton W.R. 1805-1865⍞000D                       ⊂ O Octonions                ⍝ Graves J.T. 1806-1870⍞000D⍞000D    At each step, we gain generality in exchange for some loss of structure. For⍞000D    example, going from R to C to H to O, we lose respectively:  ordering, comm-⍞000D    utativity and associativity.⍞000D⍞000D    This table illustrates the capabilities of an APL system for each of the in-⍞000D    creasingly general number systems:⍞000D⍞000D            ┌───┬───┬───┬───┬───┬───┐⍞000D            │ B │ N │ Z │ Q │ R │ C │⍞000D    ┌───────┼───┼───┼───┼───┼───┼───┤⍞000D    │ 0∨1   │ Y │ Y │ Y │ Y │ * │ * │⍞000D    ├───────┼───┼───┼───┼───┼───┼───┤⍞000D    │ 2+3   │ - │ Y │ Y │ Y │ Y │ Y │⍞000D    ├───────┼───┼───┼───┼───┼───┼───┤⍞000D    │ 2-3   │ - │ - │ Y │ Y │ Y │ Y │⍞000D    ├───────┼───┼───┼───┼───┼───┼───┤⍞000D    │ 2÷3   │ - │ - │ - │ Y │ Y │ Y │⍞000D    ├───────┼───┼───┼───┼───┼───┼───┤⍞000D    │ 2*÷2  │ - │ - │ - │ - │ Y │ Y │⍞000D    ├───────┼───┼───┼───┼───┼───┼───┤⍞000D    │ ¯1*÷2 │ - │ - │ - │ - │ - │ Y │⍞000D    └───────┴───┴───┴───┴───┴───┴───┘⍞000D⍞000D    * GCD (→gcd←) is not meaningful for irrational numbers.  In order to provide⍞000D      GCD/LCM for its internal floating-point numbers, Dyalog uses as many terms⍞000D      of their continued fraction (→cfract←) expansion as necessary to produce a⍞000D      tolerably close rational approximation.⍞000D⍞000D    N http://en.wikipedia.org/wiki/Natural_number       →nats←⍞000D    Z http://en.wikipedia.org/wiki/Integer⍞000D    Q http://en.wikipedia.org/wiki/Rational_number      →rats←⍞000D    R http://en.wikipedia.org/wiki/Real_number⍞000D    C http://en.wikipedia.org/wiki/Complex_number       →cxdraw←⍞000D    H http://en.wikipedia.org/wiki/Quaternion⍞000D    O http://en.wikipedia.org/wiki/Octonian⍞000D      http://en.wikipedia.org/wiki/Sedenion⍞000D)⍞000D⍞000DIndex;Boole G.|Hamilton W.R.|Graves J.T.' 
