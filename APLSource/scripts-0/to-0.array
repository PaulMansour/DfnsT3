'⍝ Sequence ⍺ .. ⍵:⍞000D⍞000D      3 to 10               ⍝ Inclusive ascending sequence.⍞000D3 4 5 6 7 8 9 10⍞000D⍞000D      10 to 3               ⍝ Descending sequence.⍞000D10 9 8 7 6 5 4 3⍞000D⍞000D      7 to 7                ⍝ Single-item sequence.⍞000D7⍞000D      5 7 to 13             ⍝ 2-item start determines step.⍞000D5 7 9 11 13⍞000D⍞000D      1 3 to 4              ⍝ stops short if unto not whole number of steps.⍞000D1 3⍞000D      ¯10 ¯15 to ¯25        ⍝ Negative start and step.⍞000D¯10 ¯15 ¯20 ¯25⍞000D⍞000D      1.5 1.7 to 2.5        ⍝ Fractional start and step.⍞000D1.5 1.7 1.9 2.1 2.3 2.5⍞000D⍞000D      0 3 to 10             ⍝ Sequence stops short of <last>.⍞000D0 3 6 9⍞000D⍞000D      7 8 to 7              ⍝ single-item sequence.⍞000D7⍞000D      7 8 to 6              ⍝ null sequence.⍞000D⍞000D⍝       ¯4↑1.001 1.002 to 2   ⍝ Roger''s example⍞000D⍝   1.997 1.998 1.999 2⍞000D⍞000D⍝ Bob Smith''s extension:⍞000D⍞000D    to←{                                    ⍝ Sequence ⍺ .. ⍵⍞000D        from step←⊂¨1 ¯1×-\2↑⍺,⍺+×⍵-⍺       ⍝ step default is +/- 1.⍞000D        size←0⌈1+⌊⊃(⍵-from)÷step+step=0     ⍝ shape of result⍞000D        from+step×(⍳size)-⎕io               ⍝ ⍺ thru ⍵ inclusive.⍞000D    }⍞000D⍞000D    disp (¯1 6)(0 4) to ⊂3 ¯2⍞000D┌────┬────┬────┬────┬─────┐⍞000D│¯1 6│¯1 4│¯1 2│¯1 0│¯1 ¯2│⍞000D├────┼────┼────┼────┼─────┤⍞000D│0 6 │0 4 │0 2 │0 0 │0 ¯2 │⍞000D├────┼────┼────┼────┼─────┤⍞000D│1 6 │1 4 │1 2 │1 0 │1 ¯2 │⍞000D├────┼────┼────┼────┼─────┤⍞000D│2 6 │2 4 │2 2 │2 0 │2 ¯2 │⍞000D├────┼────┼────┼────┼─────┤⍞000D│3 6 │3 4 │3 2 │3 0 │3 ¯2 │⍞000D└────┴────┴────┴────┴─────┘⍞000D⍞000D    to←{                                    ⍝ Sequence ⍺ .. ⍵⍞000D        type←10|⎕DR ⍺,⍵                     ⍝ item type.⍞000D        type∊0 2:⎕UCS(⎕UCS ⍺)∇ ⎕UCS ⍵       ⍝ char sequences.⍞000D        type=9:⍺ ∇{                         ⍝ complex arg⍞000D            j←1 0J1∘(+.×)                   ⍝ number from (re im) pair⍞000D            p←9 11∘○¨                       ⍝ (re im) pair from number⍞000D            j¨(p ⍺)⍺⍺ p ⍵                   ⍝ complex sequence via nested pairs.⍞000D        }⍵                                  ⍝⍞000D        from step←⊂¨1 ¯1×-\2↑⍺,⍺+×⍵-⍺       ⍝ step default is +/- 1.⍞000D        size←0⌈1+⌊⊃(⍵-from)÷step+step=0     ⍝ shape of result⍞000D        from+step×(⍳size)-⎕IO               ⍝ ⍺ thru ⍵ inclusive.⍞000D    }⍞000D⍞000D    0 to 3j4⍞000D0 0J1 0J2 0J3 0J4⍞000D1 1J1 1J2 1J3 1J4⍞000D2 2J1 2J2 2J3 2J4⍞000D3 3J1 3J2 3J3 3J4⍞000D⍞000D    ''a'' to ''z''⍞000Dabcdefghijklmnopqrstuvwxyz⍞000D⍞000D    ''AC'' to ''Z''⍞000DACEGIKMOQSUWY' 
