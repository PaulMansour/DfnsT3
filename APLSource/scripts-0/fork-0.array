'⍝ Simulation of ''fork'' syntax:⍞000D⍞000D    ge ← > _fk ∨ fk_ =        ⍝ defined ≥ function (dyadic).⍞000D⍞000D    (⍳5) ∘.ge ⍳5⍞000D1 0 0 0 0⍞000D1 1 0 0 0⍞000D1 1 1 0 0⍞000D1 1 1 1 0⍞000D1 1 1 1 1⍞000D⍞000D    mean ← +/ _fk ÷ fk_ ⍴     ⍝ arithmetic mean (monadic).⍞000D⍞000D    mean 1 2 3 4⍞000D2.5⍞000D⍞000D    disp 6(+ fk , fk - fk , fk × fk , fk ÷)2    ⍝ 6(+,-,×,÷)2⍞000D8 4 12 3⍞000D⍞000D    mkfn←{_←⍎⍵,''←{⍺←⊢ ⋄ ⍺'''''',⍵,''''''⍵}'' ⋄ ⍵}      ⍝ make function ''⍵''⍞000D    ⍞000D    mkfn¨''ABCDE''⍞000DABCDE⍞000D    ''⍺''A''⍵''⍞000D⍺A⍵⍞000D⍞000D    disp ''⍺''(A fk B fk C fk D fk E)''⍵''          ⍝ NB: operators associate left.⍞000D┌───────────┬─┬───┐⍞000D│┌───┬─┬───┐│D│⍺E⍵│⍞000D││⍺A⍵│B│⍺C⍵││ │   │⍞000D│└───┴─┴───┘│ │   │⍞000D└───────────┴─┴───┘⍞000D⍞000D    ∘.(∧fk∨fk⍱fk⍱fk<fk∨fk=)⍨0 1⍞000D1 0⍞000D1 1' 
