'⍝ Share arrays across space tree:⍞000D⍞000D    ⎕io←1⍞000D⍞000D    k←{,∘''KB''⍕⌊0.5+⍵÷2*10}          ⍝ approx KB.⍞000D⍞000D    nest←⍳¨∘⍳¨∘⍳¨∘⍳¨∘⍳              ⍝ nesting function.⍞000D⍞000D    nested←nest 3 3                 ⍝ complex nested array.⍞000D⍞000D:If {32=2×⎕size''⍵''}⍬                ⍝ 32-bit interpreter:⍞000D⍞000D        k ⎕size''nested''             ⍝ size in KB.⍞000D    19KB⍞000D        k nspack ⎕this              ⍝ nspack recovers most of the space.⍞000D    18KB⍞000D        k nspack ⎕this              ⍝ subsequent pack saves no more space.⍞000D    0KB⍞000D        k ⎕size''nested''             ⍝ size _appears_ not to have changed.⍞000D    19KB⍞000D        (x←⎕ns'''').(a b c←⎕ns¨3/⊂'''') ⍝ make space and three subspaces.⍞000D⍞000D        x.(a b c).var←nest¨3/⊂3 3   ⍝ populate subspaces separately.⍞000D⍞000D        k∘nspack¨x.(a b c)          ⍝ packing _within_ spaces saves 18k each.⍞000D     18KB  18KB  18KB ⍞000D⍞000D        k nspack x                  ⍝ packing _among_ spaces saves further 3K.⍞000D    3KB⍞000D:Else                               ⍝ 64-bit interpreter:⍞000D        k ⎕size''nested''             ⍝ size in KB.⍞000D    38KB⍞000D        k nspack ⎕this              ⍝ nspack recovers most of the space.⍞000D    35KB⍞000D        k nspack ⎕this              ⍝ subsequent pack saves no more space.⍞000D    0KB⍞000D        k ⎕size''nested''             ⍝ size _appears_ not to have changed.⍞000D    38KB⍞000D        (x←⎕ns'''').(a b c←⎕ns¨3/⊂'''') ⍝ make space and three subspaces.⍞000D⍞000D        x.(a b c).var←nest¨3/⊂3 3   ⍝ populate subspaces separately.⍞000D⍞000D        k∘nspack¨x.(a b c)          ⍝ packing _within_ spaces saves 18k each.⍞000D     35KB  35KB  35KB ⍞000D⍞000D        k nspack x                  ⍝ packing _among_ spaces saves further 6K.⍞000D    6KB⍞000D:EndIf' 
