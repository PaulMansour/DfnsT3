'⍝ Rational number arithmetic:⍞000D⍞000D    28 rats 75                              ⍝ rational representation.⍞000D2 7  3  5⍞000D2 1 ¯1 ¯2⍞000D⍞000D    rexp←{⍺←''r''                         ⍝ simple r-expression translator.⍞000D        rat←{'')'',⍵,''rats(''}             ⍝ ''-'' → '')-rats(''⍞000D        svec←rat\¨2/¨''+-×÷*∧^∨⍎⍕''       ⍝ subs pair for each op fn.⍞000D        src←↑subs/(svec,⊂⍺''rats ''),⊂⍵   ⍝ translated source. See →subs←.⍞000D        ''('',src,'')''                     ⍝ source for apl expression.⍞000D    }⍞000D⍞000D    eval ← ⍕rats∘⍎∘rexp                     ⍝ r-expression evaluator.⍞000D⍞000D    eval ''36r140''                           ⍝ simplify.⍞000D9r35⍞000D    eval¨''0r1'' ''1r1''                        ⍝ tricky cases.⍞000D 0r1  1r1 ⍞000D    eval ''1r1 - 0r1''                        ⍝ tricky case.⍞000D1r1⍞000D    eval ''0r1 + 1r1''                        ⍝ tricky case.⍞000D1r1⍞000D    eval ''0r1 - 0r1''                        ⍝ tricky case.⍞000D0r1⍞000D    eval ''1r2 + 1r3''                        ⍝ + sum⍞000D5r6⍞000D    eval ''1r2 - 1r3''                        ⍝ - diff⍞000D1r6⍞000D    eval ''3r4 × 2r3''                        ⍝ × prod⍞000D1r2⍞000D    eval ''2r3 ÷ 2r3''                        ⍝ ÷ quot⍞000D1r1⍞000D    eval ''4r9 * 3r2''                        ⍝ * power⍞000D8r27⍞000D    eval ''3r5 ∧ 5r6''                        ⍝ ∧ lcm⍞000D15r1⍞000D    eval ''3r5 ∨ 5r6''                        ⍝ ∨ gcd⍞000D1r30⍞000D    eval ''(1r2 × 3r4) + 1r8''                ⍝ more complex expression.⍞000D1r2⍞000D    eval ''3r1 - 5r1''                        ⍝ subtraction of larger from smaller⍞000D11::negative⍞000D    eval ''0r1 - 5r1''                        ⍝ subtraction of larger from zero.⍞000D11::negative⍞000D⍞000D    ⍎rats 3 rats 4                          ⍝ real equivalent.⍞000D0.75⍞000D    {⍵ ?rats ⍵} 3 rats 4                    ⍝ unexpected operand function.⍞000D11::unexpected: ?⍞000D⍞000D    eval ''2r1 * 1r2''                        ⍝ 2*÷2 irrational power.⍞000D11::irrational⍞000D⍞000D    disp(0 rats 0)(0rats 1)(1 rats 1)       ⍝ tricky cases.⍞000D┌─┬─┬┐⍞000D│0│0││⍞000D│1│1││⍞000D└─┴─┴┘⍞000D⍞000D    tab←{                       ⍝ function table⍞000D        aa←⍺⍺{                  ⍝ test function.⍞000D            11::''*''             ⍝ * for error.⍞000D            ⍺ ⍺⍺ rats ⍵         ⍝ apply rats operand.⍞000D        }                       ⍝⍞000D        r←{⍺ rats ⍵}            ⍝ ⍺/⍵ matrix.⍞000D        f←⍎rats                 ⍝ float.⍞000D        rat← ∘.aa ⍨ ∘.r ⍨ ⍳⍵    ⍝ using ⍺⍺ rats.⍞000D        alt← ∘.⍵⍵ ⍨ ∘.÷ ⍨ ⍳⍵    ⍝ using ⍵⍵ alternative.⍞000D        alt ≡ f¨ rat            ⍝ results identical?⍞000D    }⍞000D⍞000D    +tab+       6                           ⍝ + sum⍞000D1⍞000D    -tab{⍺<⍵:''*'' ⋄ ⍺-⍵} 6                   ⍝ - diff⍞000D1⍞000D    ×tab×       6                           ⍝ × prod⍞000D1⍞000D    ÷tab÷       6                           ⍝ ÷ quot⍞000D1⍞000D    ⎕ct←16*¯8                               ⍝ soften tolerance for gcd/lcm:⍞000D⍞000D    lcm←{⍺×⍵÷⍺ gcd ⍵}                       ⍝ least common multiple.⍞000D⍞000D    ∨tab gcd    6                           ⍝ ∨ gcd⍞000D1⍞000D    ∧tab lcm    6                           ⍝ ∧ lcm⍞000D1' 
