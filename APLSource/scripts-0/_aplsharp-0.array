'⍝ Bunda-Gerth definitions for APL#⍞000D⍞000DA # n m a b c v 0 1 2 3 4 5 6 7 8 9 ⍺ ⍵     ⍝ Arrays⍞000DF + - × ÷ ⍳ ⍴ = < | ∇                       ⍝ Functions⍞000DZ / ⌿ \ ⍀                                   ⍝ Hybrid function/operators⍞000DAF                                          ⍝ bound left argument⍞000DJOT ∘                                       ⍝ null / compose⍞000DDOT .                                       ⍝ ref / product.⍞000DDX                                          ⍝ dotted ...⍞000DMOP ¨ &                                     ⍝ Monadic operators⍞000DDOP   ⍣                                     ⍝ Dyadic operators⍞000DIDX                                         ⍝ index/axis⍞000DSEM ;                                       ⍝ semicolon⍞000DLST                                         ⍝ subscript list _;_;_⍞000DCLN :                                       ⍝ colon token⍞000DGRD                                         ⍝ guard :⍞000DDMD ⋄                                       ⍝ diamond ⋄⍞000DSEGS                                        ⍝ diamond segments .. ⋄ .. ⋄ ..⍞000DARO ←                                       ⍝ assignment arrow⍞000DASG                                         ⍝ name assignment⍞000DERR                                         ⍝ error⍞000D() [IDX] {F}                                ⍝ brackets⍞000D⍞000DA:DOT→DX                                    ⍝ dotted ...⍞000DDOT:A→ERR⍞000D⍞000DDX:A→A DX:F→F DX:Z→Z                        ⍝ dotted expression⍞000DDX:MOP→MOP DX:DOP→DOP                       ⍝ dotted operator⍞000D⍞000DA:ARO→ASG                                   ⍝ name to assignment arrow⍞000D⍞000DA:A→A                                       ⍝ strand⍞000D⍞000DDOP:F→MOP DOP:Z→MOP DOP:A→MOP               ⍝ dyadic and⍞000DA:MOP→F F:MOP→F Z:MOP→F                     ⍝ ... monadic operators⍞000DA:IDX→A F:IDX→F Z:IDX→Z                     ⍝ axis / index⍞000DF:Z→F   Z:Z→F                               ⍝ hybrid as operator⍞000DDOT:F→MOP DOT:Z→MOP                         ⍝ inner product⍞000DJOT:MOP→F DOP:JOT→MOP                       ⍝ jot-as-null (outer product)⍞000DJOT:F→MOP JOT:Z→MOP JOT:A→MOP               ⍝ compose⍞000D⍞000DA:F→AF                                      ⍝ left argument to its function⍞000DA:Z→AF                                      ⍝ hybrid as function⍞000DIDX:F→ERR IDX:Z→ERR IDX:A→ERR⍞000D⍞000DAF:A→A F:A→A                                ⍝ function to its right argument⍞000D⍞000D  A:SEM→LST LST:SEM→SEM                     ⍝ [2;] [2;;]⍞000DSEM:SEM→LST LST:A→LST                       ⍝ [;;] [2;3]⍞000DSEM:A→LST                                   ⍝ [;3]⍞000D⍞000DA:CLN→GRD GRD:A→GRD                         ⍝ guards⍞000DCLN:A→ERR                                   ⍝ for 1:2⋄ → (1:2)⋄⍞000D⍞000D   A:DMD→SEGS  DMD:A→SEGS                   ⍝ diamond segment⍞000D GRD:DMD→SEGS⍞000DSEGS:SEGS→SEGS DMD:DMD→SEGS⍞000D⍞000DSEGS:GRD→SEGS  SEGS:A→SEGS                  ⍝ trailing segment.⍞000DSEGS:DMD→SEGS                               ⍝ ⋄⋄⋄⍞000D⍞000DASG:A→A                                     ⍝ array naming⍞000DASG:F→F      ASG:Z→Z                        ⍝ function naming⍞000DASG:MOP→MOP  ASG:DOP→DOP                    ⍝ operator naming' 
