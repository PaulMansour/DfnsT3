'⍝ Line Vectors:⍞000D⍞000D    cvec←''Incidentally, using the terms "successor" and "predecessor" as opposed to "increment" and "decrement" stems from having a <denotational> rather than <operational> view of a function. In other words, a function is seen as denoting the mapping between the sets that comprise its domain and range, rather than as a prescription for the operation that converts one into the other. To take a specific example: Min''''s ''''+'''' doesn''''t increment its argument; it leaves it alone and denotes its successor as result. Given this view, words from the subset of nouns that can be used as determiners (first of, reverse of, ···), seem more appropriate than transitive verbs as names for functions. Specifically: sum, difference, product and quotient appear preferable to: add, subtract, multiply and divide.''⍞000D⍞000D      60 wrap cvec⍞000DIncidentally, using the terms "successor" and "predecessor" ⍞000Das opposed to "increment" and "decrement" stems from having ⍞000Da <denotational> rather than <operational> view of a        ⍞000Dfunction. In other words, a function is seen as denoting the⍞000Dmapping between the sets that comprise its domain and range,⍞000Drather than as a prescription for the operation that        ⍞000Dconverts one into the other. To take a specific example:    ⍞000DMin''s ''+'' doesn''t increment its argument; it leaves it alone⍞000Dand denotes its successor as result. Given this view, words ⍞000Dfrom the subset of nouns that can be used as determiners    ⍞000D(first of, reverse of, ···), seem more appropriate than     ⍞000Dtransitive verbs as names for functions. Specifically: sum, ⍞000Ddifference, product and quotient appear preferable to: add, ⍞000Dsubtract, multiply and divide.                              ⍞000D⍞000D      justify 60 wrap cvec⍞000DIncidentally,  using the terms "successor" and "predecessor"⍞000Das  opposed to "increment" and "decrement" stems from having⍞000Da   <denotational>  rather  than  <operational>  view  of  a⍞000Dfunction. In other words, a function is seen as denoting the⍞000Dmapping between the sets that comprise its domain and range,⍞000Drather  than  as  a  prescription  for  the  operation  that⍞000Dconverts  one  into  the  other. To take a specific example:⍞000DMin''s ''+'' doesn''t increment its argument; it leaves it alone⍞000Dand  denotes its successor as result. Given this view, words⍞000Dfrom  the  subset  of  nouns that can be used as determiners⍞000D(first  of,  reverse  of,  ···),  seem more appropriate than⍞000Dtransitive  verbs as names for functions. Specifically: sum,⍞000Ddifference,  product and quotient appear preferable to: add,⍞000Dsubtract, multiply and divide.                              ⍞000D⍞000D    cvec ≡ squeeze unwrap justify 60 wrap cvec              ⍝ full circle.⍞000D1⍞000D    {cvec ≡ squeeze unwrap justify ⍵ wrap cvec}¨10×2 to 10  ⍝ full circles.⍞000D1 1 1 1 1 1 1 1 1⍞000D⍞000D    cvec ≡ squeeze unwrap justify 10 wrap cvec              ⍝ too narrow.⍞000D0' 
