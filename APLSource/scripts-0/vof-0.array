'⍝ Vector of functions:⍞000D⍞000D    1 2 3 4 {''''} vof + vof ! vof ? vof | 5 6 7 8        ⍝ vector vector⍞000D6 15  1 6 4  0⍞000D⍞000D          4 {''''} vof + vof ! vof ? vof | 5 6 7 8        ⍝ scalar vector⍞000D9 15  4 2 1 5  0⍞000D⍞000D    1 2 3 4 {''''} vof + vof ! vof ? vof | 5              ⍝ vector scalar⍞000D6 10  4 5 2  1⍞000D⍞000D          4 {''''} vof + vof ! vof ? vof | 5              ⍝ scalar scalar⍞000D9 5  3 5 1 4  1⍞000D⍞000D            {''''} vof + vof ! vof ? vof | 5 6 7 8        ⍝ monadic vector⍞000D5 720 1 8⍞000D⍞000D            {''''} vof + vof ! vof ? vof | 5              ⍝ monadic scalar⍞000D5 120 2 5⍞000D⍞000D    1 disp {2⍴⍵} vof {3⍴⍵} vof {4⍴⍵} 2 3 4              ⍝ without left closure⍞000D┌→┬─┬─────┬───────┐⍞000D│2│2│3 3 3│4 4 4 4│⍞000D└─┴─┴~───→┴~─────→┘⍞000D⍞000D    1 disp {⍬} vof {2⍴⍵} vof {3⍴⍵} vof {4⍴⍵} 2 3 4      ⍝ explicit left closure⍞000D┌→──┬─────┬───────┐⍞000D│2 2│3 3 3│4 4 4 4│⍞000D└~─→┴~───→┴~─────→┘⍞000D⍞000D    _vof←{                          ⍝ Close vector of functions.⍞000D        ⍺←⊂                         ⍝ ⍺ elided: ⊂⍵.⍞000D        (al ar)(wl wr)←⍺ ⍵          ⍝ distrubute arg(s).⍞000D        1≡⍺ 1:(⍺⍺ wl)(⍵⍵ wr)        ⍝ mondadic.⍞000D        (al ⍺⍺ wl)(ar ⍵⍵ wr)        ⍝ dyadic.⍞000D    }⍞000D⍞000D    1 disp {2⍴⍵} _vof {3⍴⍵} vof {4⍴⍵} 2 3 4             ⍝ closure using <_vof>⍞000D┌→──┬─────┬───────┐⍞000D│2 2│3 3 3│4 4 4 4│⍞000D└~─→┴~───→┴~─────→┘' 
