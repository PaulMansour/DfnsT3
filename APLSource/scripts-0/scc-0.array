'⍝ Strongly connected components of graph ⍵:⍞000D⍞000D    show←{↑(⍕¨⍳⍴⍵),¨'' → ''∘,¨⍕¨⍵}            ⍝ table display of graph⍞000D⍞000D    ⎕io←0   ⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝ try with origin 0⍞000D⍞000D    g ← ,¨1(2 4 5)(3 6)(2 7)(0 5)6 5(3 6)⍞000D    disp g⍞000D┌─┬─────┬───┬───┬───┬─┬─┬───┐⍞000D│1│2 4 5│3 6│2 7│0 5│6│5│3 6│⍞000D└─┴─────┴───┴───┴───┴─┴─┴───┘⍞000D    show g⍞000D0 → 1    ⍞000D1 → 2 4 5⍞000D2 → 3 6  ⍞000D3 → 2 7  ⍞000D4 → 0 5  ⍞000D5 → 6    ⍞000D6 → 5    ⍞000D7 → 3 6  ⍞000D⍞000D    scc g                                   ⍝ strongly connected components⍞000D0 0 1 1 0 2 2 1⍞000D⍞000D    h ← ,¨4 0(1 3)2 1(1 4 6)(2 5)(3 6 7)⍞000D    disp h⍞000D┌─┬─┬───┬─┬─┬─────┬───┬─────┐⍞000D│4│0│1 3│2│1│1 4 6│2 5│3 6 7│⍞000D└─┴─┴───┴─┴─┴─────┴───┴─────┘⍞000D    show h⍞000D0 → 4    ⍞000D1 → 0    ⍞000D2 → 1 3  ⍞000D3 → 2    ⍞000D4 → 1    ⍞000D5 → 1 4 6⍞000D6 → 2 5  ⍞000D7 → 3 6 7⍞000D⍞000D    scc h                                   ⍝ strongly connected components⍞000D0 0 1 1 0 2 2 3⍞000D⍞000D    mike ← (3)(4)(3 4)(0 2 4)(1 2 3)        ⍝ Mike Day''s example⍞000D⍞000D    scc mike                                ⍝ graph is strongly connected⍞000D0 0 0 0 0⍞000D⍞000D    perms←{ ⍵∘gperm¨ ↓pmat ≢⍵}              ⍝ all permutations of graph ⍵⍞000D⍞000D    ↑ ∪ scc¨ perms mike                     ⍝ perms don''t affect connectivity⍞000D0 0 0 0 0⍞000D⍞000D    ⎕io←1   ⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝ try with origin 1⍞000D⍞000D    scc g+1⍞000D1 1 2 2 1 3 3 2⍞000D    scc h+1⍞000D1 1 2 2 1 3 3 4⍞000D⍞000D    scc 1⌽⍳10                               ⍝ polygon is strongly connected⍞000D1 1 1 1 1 1 1 1 1 1⍞000D    scc ⍳10                                 ⍝ graph with no connections⍞000D1 2 3 4 5 6 7 8 9 10⍞000D    scc 2⌽⍳10                               ⍝ graph with two components⍞000D1 2 1 2 1 2 1 2 1 2⍞000D    ⍬≡scc ⍬                                 ⍝ 0-vertex graph⍞000D1⍞000D    (⍳10)≡scc 10⍴⊂⍬                         ⍝ null graph.⍞000D1⍞000D    cube←{                                  ⍝ ⍵-cube.⍞000D        ↓{                                  ⍝ split simple matrix:⍞000D            0=⍵:1 0⍴0                       ⍝ 0-cube: point.⍞000D            (2*⍵-1){                        ⍝ number of vertices.⍞000D                (⍵⍪⍵+⍺),⍺⌽⍳2×⍺              ⍝ ⍵-cube from⍞000D            }∇ ⍵-1                          ⍝   ⍵-1-cube.⍞000D        }⍵⍞000D    }⍞000D⍞000D    ⎕io∧.=scc cube 4                        ⍝ ⍵-cube is strongly connected⍞000D1⍞000D    con←{               ⍝ Condensation of graph ⍵.⍞000D        c←scc ⍵         ⍝ strongly connected components⍞000D        v←{⊂⍵}⌸c        ⍝ component-grouped vertex indices⍞000D        e←c{⊂⍵}⌸⍵       ⍝   ..      ..      edges⍞000D        x←∪¨(∊¨e)~¨v    ⍝ out-of-component edges⍞000D        m←↓∨/¨x∘.∊v     ⍝ masks of remote vertices⍞000D        g←m/¨⊂⍳⍴v       ⍝ condensed DAG⍞000D        g v             ⍝ ... and contracted vertices⍞000D    }⍞000D⍞000D    disp g+1                    ⍝ graph⍞000D┌─┬─────┬───┬───┬───┬─┬─┬───┐⍞000D│2│3 5 6│4 7│3 8│1 6│7│6│4 7│⍞000D└─┴─────┴───┴───┴───┴─┴─┴───┘⍞000D⍞000D    scc g+1                     ⍝ strongly connected components⍞000D1 1 2 2 1 3 3 2⍞000D⍞000D    disp¨ con g+1               ⍝ condensation and contracted vertices⍞000D ┌───┬─┬┐  ┌─────┬─────┬───┐ ⍞000D │2 3│3││  │1 2 5│3 4 8│6 7│ ⍞000D └───┴─┴┘  └─────┴─────┴───┘ ⍞000D⍞000D    isdag ← scc ≡ ⍳∘≢                   ⍝ is-a-DAG (contains no cycles)⍞000D    isdag g+1                           ⍝ g contains at least one cycle⍞000D0⍞000D    isdag (⍳10),⊂⍬                      ⍝ graph is acyclic⍞000D1' 
