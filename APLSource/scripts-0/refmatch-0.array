'⍝ Space reference match:⍞000D⍞000D    _←''xy''⎕ns¨⊂''''                   ⍝ make spaces x and y.⍞000D⍞000D    x refmatch x                    ⍝ space matches self.⍞000D1⍞000D    x refmatch y                    ⍝ spaces match.⍞000D1⍞000D                                    ⍝ populate with:⍞000D    (x y).(⎕io ⎕ml num)←⊂1 2 3      ⍝   vars,⍞000D    _←(x y).(⎕fx''z←sum v'' ''z←+/v'')  ⍝   function,⍞000D    (x y).(z←⎕ns'''')                 ⍝   space.⍞000D    (x y).z.(⎕io ⎕ml num)←⊂0 1 3    ⍝ populate subspace.⍞000D⍞000D    x refmatch y                    ⍝ spaces match.⍞000D1⍞000D    x.z.num←3                       ⍝ replace with same value.⍞000D    x refmatch y                    ⍝ still match.⍞000D1⍞000D    x.z.num←4                       ⍝ replace with distinct value.⍞000D    x refmatch y                    ⍝ mismatch.⍞000D0⍞000D    x y←⎕ns¨'''' ''''⊣x y←0             ⍝ new spaces.⍞000D    (x y).z ← x                     ⍝ matching cycles.⍞000D    x refmatch y                    ⍝ ... don''t hang.⍞000D1⍞000D    x y←⎕ns¨'''' ''''⊣x y←0             ⍝ new spaces.⍞000D    (x y).(y x)←x y                 ⍝ non-matching cycles.⍞000D    x refmatch y                    ⍝ ... don''t hang.⍞000D0' 
