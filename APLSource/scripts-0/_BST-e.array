'⍝ Binary Search Trees:⍞000D⍞000D⍝ These tests assume that the calling test (avl, splay, redblack) has defined⍞000D⍝ put, rem and chk.⍞000D⍞000D    mk ← 0∘(put foldl)                  ⍝ make tree :: t ← ∇ (k v)[]⍞000D⍞000D    ∧/∧/¨⊃∘chk∘mk¨∘↓∘pmat¨⍳6            ⍝ insert all perms up to ⍳6⍞000D1⍞000D⍞000D⍝ As chk is O(⍵), the time taken to run the test increases with the square of⍞000D⍝ its argument.                                                     ¯¯¯¯¯¯⍞000D⍞000D    ⎕rl←3⊃⎕ts                           ⍝ daily random seed.⍞000D⍞000D    soak←{                              ⍝ soak-test insert/remove.⍞000D        upd←{                           ⍝ insert/remove ⍵ random keys.⍞000D            ⍬≡⍵:⍺                       ⍝ no more vals: finished.⍞000D            next←⍺ ⍺⍺ ⊃⍵                ⍝ tree ⍺ with ⍵ inserted/removed.⍞000D            ~⊃chk next:''! bad tree''     ⍝ bad tree: give up.⍞000D            next ∇ 1↓⍵                  ⍝ try next value.⍞000D        }⍞000D        t←0 put upd ⍵?⍵                 ⍝ insert each ⍳⍵ in random order.⍞000D        ''!''≡⊃t:t                        ⍝ error: quit.⍞000D        t rem upd ⍵?⍵                   ⍝ remove each ⍳⍵ in random order.⍞000D    }⍞000D⍞000D    soak 100                            ⍝ reasonably large tree.⍞000D0⍞000D    (⍳256)≡vec mk 256?256               ⍝ vector from random tree.⍞000D1⍞000D    chk 0                               ⍝ stats for null tree.⍞000D1 0 0 0⍞000D⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝ _BST returns:' 
